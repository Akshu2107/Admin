{"ast":null,"code":"/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.1.1\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n(function () {\n  \"use strict\";\n\n  //Declare root variable - window in the browser, global on the server\n  var root = this,\n    previous = root.Chart;\n\n  //Occupy the global variable of Chart, and create a simple base class\n  var Chart = function (context) {\n    var chart = this;\n    this.canvas = context.canvas;\n    this.ctx = context;\n\n    //Variables global to the chart\n    var computeDimension = function (element, dimension) {\n      if (element['offset' + dimension]) {\n        return element['offset' + dimension];\n      } else {\n        return document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n      }\n    };\n    var width = this.width = computeDimension(context.canvas, 'Width') || context.canvas.width;\n    var height = this.height = computeDimension(context.canvas, 'Height') || context.canvas.height;\n    this.aspectRatio = this.width / this.height;\n    //High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n    helpers.retinaScale(this);\n    return this;\n  };\n  //Globally expose the defaults to allow for user updating/changing\n  Chart.defaults = {\n    global: {\n      // Boolean - Whether to animate the chart\n      animation: true,\n      // Number - Number of animation steps\n      animationSteps: 60,\n      // String - Animation easing effect\n      animationEasing: \"easeOutQuart\",\n      // Boolean - If we should show the scale at all\n      showScale: true,\n      // Boolean - If we want to override with a hard coded scale\n      scaleOverride: false,\n      // ** Required if scaleOverride is true **\n      // Number - The number of steps in a hard coded scale\n      scaleSteps: null,\n      // Number - The value jump in the hard coded scale\n      scaleStepWidth: null,\n      // Number - The scale starting value\n      scaleStartValue: null,\n      // String - Colour of the scale line\n      scaleLineColor: \"rgba(0,0,0,.1)\",\n      // Number - Pixel width of the scale line\n      scaleLineWidth: 1,\n      // Boolean - Whether to show labels on the scale\n      scaleShowLabels: true,\n      // Interpolated JS string - can access value\n      scaleLabel: \"<%=value%>\",\n      // Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n      scaleIntegersOnly: true,\n      // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n      scaleBeginAtZero: false,\n      // String - Scale label font declaration for the scale label\n      scaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Scale label font size in pixels\n      scaleFontSize: 12,\n      // String - Scale label font weight style\n      scaleFontStyle: \"normal\",\n      // String - Scale label font colour\n      scaleFontColor: \"#666\",\n      // Boolean - whether or not the chart should be responsive and resize when the browser does.\n      responsive: false,\n      // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n      maintainAspectRatio: true,\n      // Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n      showTooltips: true,\n      // Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n      customTooltips: false,\n      // Array - Array of string names to attach tooltip events\n      tooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n      // String - Tooltip background colour\n      tooltipFillColor: \"rgba(0,0,0,0.8)\",\n      // String - Tooltip label font declaration for the scale label\n      tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Tooltip label font size in pixels\n      tooltipFontSize: 14,\n      // String - Tooltip font weight style\n      tooltipFontStyle: \"normal\",\n      // String - Tooltip label font colour\n      tooltipFontColor: \"#fff\",\n      // String - Tooltip title font declaration for the scale label\n      tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      // Number - Tooltip title font size in pixels\n      tooltipTitleFontSize: 14,\n      // String - Tooltip title font weight style\n      tooltipTitleFontStyle: \"bold\",\n      // String - Tooltip title font colour\n      tooltipTitleFontColor: \"#fff\",\n      // String - Tooltip title template\n      tooltipTitleTemplate: \"<%= label%>\",\n      // Number - pixel width of padding around tooltip text\n      tooltipYPadding: 6,\n      // Number - pixel width of padding around tooltip text\n      tooltipXPadding: 6,\n      // Number - Size of the caret on the tooltip\n      tooltipCaretSize: 8,\n      // Number - Pixel radius of the tooltip border\n      tooltipCornerRadius: 6,\n      // Number - Pixel offset from point x to tooltip edge\n      tooltipXOffset: 10,\n      // String - Template string for single tooltips\n      tooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n      // String - Template string for single tooltips\n      multiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n      // String - Colour behind the legend colour block\n      multiTooltipKeyBackground: '#fff',\n      // Array - A list of colors to use as the defaults\n      segmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\"],\n      // Array - A list of highlight colors to use as the defaults\n      segmentHighlightColorDefaults: [\"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\"],\n      // Function - Will fire on animation progression.\n      onAnimationProgress: function () {},\n      // Function - Will fire on animation completion.\n      onAnimationComplete: function () {}\n    }\n  };\n\n  //Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {};\n\n  //Global Chart helpers object for utility methods and classes\n  var helpers = Chart.helpers = {};\n\n  //-- Basic js utility methods\n  var each = helpers.each = function (loopable, callback, self) {\n      var additionalArgs = Array.prototype.slice.call(arguments, 3);\n      // Check to see if null or undefined firstly.\n      if (loopable) {\n        if (loopable.length === +loopable.length) {\n          var i;\n          for (i = 0; i < loopable.length; i++) {\n            callback.apply(self, [loopable[i], i].concat(additionalArgs));\n          }\n        } else {\n          for (var item in loopable) {\n            callback.apply(self, [loopable[item], item].concat(additionalArgs));\n          }\n        }\n      }\n    },\n    clone = helpers.clone = function (obj) {\n      var objClone = {};\n      each(obj, function (value, key) {\n        if (obj.hasOwnProperty(key)) {\n          objClone[key] = value;\n        }\n      });\n      return objClone;\n    },\n    extend = helpers.extend = function (base) {\n      each(Array.prototype.slice.call(arguments, 1), function (extensionObject) {\n        each(extensionObject, function (value, key) {\n          if (extensionObject.hasOwnProperty(key)) {\n            base[key] = value;\n          }\n        });\n      });\n      return base;\n    },\n    merge = helpers.merge = function (base, master) {\n      //Merge properties in left object over to a shallow clone of object right.\n      var args = Array.prototype.slice.call(arguments, 0);\n      args.unshift({});\n      return extend.apply(null, args);\n    },\n    indexOf = helpers.indexOf = function (arrayToSearch, item) {\n      if (Array.prototype.indexOf) {\n        return arrayToSearch.indexOf(item);\n      } else {\n        for (var i = 0; i < arrayToSearch.length; i++) {\n          if (arrayToSearch[i] === item) return i;\n        }\n        return -1;\n      }\n    },\n    where = helpers.where = function (collection, filterCallback) {\n      var filtered = [];\n      helpers.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    },\n    findNextWhere = helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (!startIndex) {\n        startIndex = -1;\n      }\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    },\n    findPreviousWhere = helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (!startIndex) {\n        startIndex = arrayToSearch.length;\n      }\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    },\n    inherits = helpers.inherits = function (extensions) {\n      //Basic javascript inheritance based on the model created in Backbone.js\n      var parent = this;\n      var ChartElement = extensions && extensions.hasOwnProperty(\"constructor\") ? extensions.constructor : function () {\n        return parent.apply(this, arguments);\n      };\n      var Surrogate = function () {\n        this.constructor = ChartElement;\n      };\n      Surrogate.prototype = parent.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = inherits;\n      if (extensions) extend(ChartElement.prototype, extensions);\n      ChartElement.__super__ = parent.prototype;\n      return ChartElement;\n    },\n    noop = helpers.noop = function () {},\n    uid = helpers.uid = function () {\n      var id = 0;\n      return function () {\n        return \"chart-\" + id++;\n      };\n    }(),\n    warn = helpers.warn = function (str) {\n      //Method for warning of errors\n      if (window.console && typeof window.console.warn === \"function\") console.warn(str);\n    },\n    amd = helpers.amd = typeof define === 'function' && define.amd,\n    //-- Math methods\n    isNumber = helpers.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    },\n    max = helpers.max = function (array) {\n      return Math.max.apply(Math, array);\n    },\n    min = helpers.min = function (array) {\n      return Math.min.apply(Math, array);\n    },\n    cap = helpers.cap = function (valueToCap, maxValue, minValue) {\n      if (isNumber(maxValue)) {\n        if (valueToCap > maxValue) {\n          return maxValue;\n        }\n      } else if (isNumber(minValue)) {\n        if (valueToCap < minValue) {\n          return minValue;\n        }\n      }\n      return valueToCap;\n    },\n    getDecimalPlaces = helpers.getDecimalPlaces = function (num) {\n      if (num % 1 !== 0 && isNumber(num)) {\n        var s = num.toString();\n        if (s.indexOf(\"e-\") < 0) {\n          // no exponent, e.g. 0.01\n          return s.split(\".\")[1].length;\n        } else if (s.indexOf(\".\") < 0) {\n          // no decimal point, e.g. 1e-9\n          return parseInt(s.split(\"e-\")[1]);\n        } else {\n          // exponent and decimal point, e.g. 1.23e-9\n          var parts = s.split(\".\")[1].split(\"e-\");\n          return parts[0].length + parseInt(parts[1]);\n        }\n      } else {\n        return 0;\n      }\n    },\n    toRadians = helpers.radians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    },\n    // Gets the angle from vertical upright to the point about a centre.\n    getAngleFromPoint = helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x,\n        distanceFromYCenter = anglePoint.y - centrePoint.y,\n        radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      //If the segment is in the top left quadrant, we need to add another rotation to the angle\n      if (distanceFromXCenter < 0 && distanceFromYCenter < 0) {\n        angle += Math.PI * 2;\n      }\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    },\n    aliasPixel = helpers.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    },\n    splineCurve = helpers.splineCurve = function (FirstPoint, MiddlePoint, AfterPoint, t) {\n      //Props to Rob Spencer at scaled innovation for his post on splining between points\n      //http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      var d01 = Math.sqrt(Math.pow(MiddlePoint.x - FirstPoint.x, 2) + Math.pow(MiddlePoint.y - FirstPoint.y, 2)),\n        d12 = Math.sqrt(Math.pow(AfterPoint.x - MiddlePoint.x, 2) + Math.pow(AfterPoint.y - MiddlePoint.y, 2)),\n        fa = t * d01 / (d01 + d12),\n        // scaling factor for triangle Ta\n        fb = t * d12 / (d01 + d12);\n      return {\n        inner: {\n          x: MiddlePoint.x - fa * (AfterPoint.x - FirstPoint.x),\n          y: MiddlePoint.y - fa * (AfterPoint.y - FirstPoint.y)\n        },\n        outer: {\n          x: MiddlePoint.x + fb * (AfterPoint.x - FirstPoint.x),\n          y: MiddlePoint.y + fb * (AfterPoint.y - FirstPoint.y)\n        }\n      };\n    },\n    calculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function (val) {\n      return Math.floor(Math.log(val) / Math.LN10);\n    },\n    calculateScaleRange = helpers.calculateScaleRange = function (valuesArray, drawingSize, textSize, startFromZero, integersOnly) {\n      //Set a minimum step of two - a point at the top of the graph, and a point at the base\n      var minSteps = 2,\n        maxSteps = Math.floor(drawingSize / (textSize * 1.5)),\n        skipFitting = minSteps >= maxSteps;\n\n      // Filter out null values since these would min() to zero\n      var values = [];\n      each(valuesArray, function (v) {\n        v == null || values.push(v);\n      });\n      var minValue = min(values),\n        maxValue = max(values);\n\n      // We need some degree of separation here to calculate the scales if all the values are the same\n      // Adding/minusing 0.5 will give us a range of 1.\n      if (maxValue === minValue) {\n        maxValue += 0.5;\n        // So we don't end up with a graph with a negative start value if we've said always start from zero\n        if (minValue >= 0.5 && !startFromZero) {\n          minValue -= 0.5;\n        } else {\n          // Make up a whole number above the values\n          maxValue += 0.5;\n        }\n      }\n      var valueRange = Math.abs(maxValue - minValue),\n        rangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n        graphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n        graphMin = startFromZero ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n        graphRange = graphMax - graphMin,\n        stepValue = Math.pow(10, rangeOrderOfMagnitude),\n        numberOfSteps = Math.round(graphRange / stepValue);\n\n      //If we have more space on the graph we'll use it to give more definition to the data\n      while ((numberOfSteps > maxSteps || numberOfSteps * 2 < maxSteps) && !skipFitting) {\n        if (numberOfSteps > maxSteps) {\n          stepValue *= 2;\n          numberOfSteps = Math.round(graphRange / stepValue);\n          // Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n          if (numberOfSteps % 1 !== 0) {\n            skipFitting = true;\n          }\n        }\n        //We can fit in double the amount of scale points on the scale\n        else {\n          //If user has declared ints only, and the step value isn't a decimal\n          if (integersOnly && rangeOrderOfMagnitude >= 0) {\n            //If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n            if (stepValue / 2 % 1 === 0) {\n              stepValue /= 2;\n              numberOfSteps = Math.round(graphRange / stepValue);\n            }\n            //If it would make it a float break out of the loop\n            else {\n              break;\n            }\n          }\n          //If the scale doesn't have to be an int, make the scale more granular anyway.\n          else {\n            stepValue /= 2;\n            numberOfSteps = Math.round(graphRange / stepValue);\n          }\n        }\n      }\n      if (skipFitting) {\n        numberOfSteps = minSteps;\n        stepValue = graphRange / numberOfSteps;\n      }\n      return {\n        steps: numberOfSteps,\n        stepValue: stepValue,\n        min: graphMin,\n        max: graphMin + numberOfSteps * stepValue\n      };\n    },\n    /* jshint ignore:start */\n    // Blows up jshint errors based on the new Function constructor\n    //Templating methods\n    //Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n    template = helpers.template = function (templateString, valuesObject) {\n      // If templateString is function rather than string-template - call the function for valuesObject\n\n      if (templateString instanceof Function) {\n        return templateString(valuesObject);\n      }\n      var cache = {};\n      function tmpl(str, data) {\n        // Figure out if we're getting a template, or if we need to\n        // load the template - and be sure to cache the result.\n        var fn = !/\\W/.test(str) ? cache[str] = cache[str] :\n        // Generate a reusable function that will serve as a template\n        // generator (and which will be cached).\n        new Function(\"obj\", \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n        // Introduce the data as local variables using with(){}\n        \"with(obj){p.push('\" +\n        // Convert the template into pure JavaScript\n        str.replace(/[\\r\\t\\n]/g, \" \").split(\"<%\").join(\"\\t\").replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\").replace(/\\t=(.*?)%>/g, \"',$1,'\").split(\"\\t\").join(\"');\").split(\"%>\").join(\"p.push('\").split(\"\\r\").join(\"\\\\'\") + \"');}return p.join('');\");\n\n        // Provide some basic currying to the user\n        return data ? fn(data) : fn;\n      }\n      return tmpl(templateString, valuesObject);\n    },\n    /* jshint ignore:end */\n    generateLabels = helpers.generateLabels = function (templateString, numberOfSteps, graphMin, stepValue) {\n      var labelsArray = new Array(numberOfSteps);\n      if (templateString) {\n        each(labelsArray, function (val, index) {\n          labelsArray[index] = template(templateString, {\n            value: graphMin + stepValue * (index + 1)\n          });\n        });\n      }\n      return labelsArray;\n    },\n    //--Animation methods\n    //Easing functions adapted from Robert Penner's easing equations\n    //http://www.robertpenner.com/easing/\n    easingEffects = helpers.easingEffects = {\n      linear: function (t) {\n        return t;\n      },\n      easeInQuad: function (t) {\n        return t * t;\n      },\n      easeOutQuad: function (t) {\n        return -1 * t * (t - 2);\n      },\n      easeInOutQuad: function (t) {\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * t * t;\n        }\n        return -1 / 2 * (--t * (t - 2) - 1);\n      },\n      easeInCubic: function (t) {\n        return t * t * t;\n      },\n      easeOutCubic: function (t) {\n        return 1 * ((t = t / 1 - 1) * t * t + 1);\n      },\n      easeInOutCubic: function (t) {\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * t * t * t;\n        }\n        return 1 / 2 * ((t -= 2) * t * t + 2);\n      },\n      easeInQuart: function (t) {\n        return t * t * t * t;\n      },\n      easeOutQuart: function (t) {\n        return -1 * ((t = t / 1 - 1) * t * t * t - 1);\n      },\n      easeInOutQuart: function (t) {\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * t * t * t * t;\n        }\n        return -1 / 2 * ((t -= 2) * t * t * t - 2);\n      },\n      easeInQuint: function (t) {\n        return 1 * (t /= 1) * t * t * t * t;\n      },\n      easeOutQuint: function (t) {\n        return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n      },\n      easeInOutQuint: function (t) {\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * t * t * t * t * t;\n        }\n        return 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n      },\n      easeInSine: function (t) {\n        return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n      },\n      easeOutSine: function (t) {\n        return 1 * Math.sin(t / 1 * (Math.PI / 2));\n      },\n      easeInOutSine: function (t) {\n        return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n      },\n      easeInExpo: function (t) {\n        return t === 0 ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n      },\n      easeOutExpo: function (t) {\n        return t === 1 ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n      },\n      easeInOutExpo: function (t) {\n        if (t === 0) {\n          return 0;\n        }\n        if (t === 1) {\n          return 1;\n        }\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * Math.pow(2, 10 * (t - 1));\n        }\n        return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n      },\n      easeInCirc: function (t) {\n        if (t >= 1) {\n          return t;\n        }\n        return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n      },\n      easeOutCirc: function (t) {\n        return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n      },\n      easeInOutCirc: function (t) {\n        if ((t /= 1 / 2) < 1) {\n          return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n        }\n        return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n      },\n      easeInElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n          return 0;\n        }\n        if ((t /= 1) == 1) {\n          return 1;\n        }\n        if (!p) {\n          p = 1 * 0.3;\n        }\n        if (a < Math.abs(1)) {\n          a = 1;\n          s = p / 4;\n        } else {\n          s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n      },\n      easeOutElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n          return 0;\n        }\n        if ((t /= 1) == 1) {\n          return 1;\n        }\n        if (!p) {\n          p = 1 * 0.3;\n        }\n        if (a < Math.abs(1)) {\n          a = 1;\n          s = p / 4;\n        } else {\n          s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n      },\n      easeInOutElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n          return 0;\n        }\n        if ((t /= 1 / 2) == 2) {\n          return 1;\n        }\n        if (!p) {\n          p = 1 * (0.3 * 1.5);\n        }\n        if (a < Math.abs(1)) {\n          a = 1;\n          s = p / 4;\n        } else {\n          s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        if (t < 1) {\n          return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n        }\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n      },\n      easeInBack: function (t) {\n        var s = 1.70158;\n        return 1 * (t /= 1) * t * ((s + 1) * t - s);\n      },\n      easeOutBack: function (t) {\n        var s = 1.70158;\n        return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n      },\n      easeInOutBack: function (t) {\n        var s = 1.70158;\n        if ((t /= 1 / 2) < 1) {\n          return 1 / 2 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 1 / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n      },\n      easeInBounce: function (t) {\n        return 1 - easingEffects.easeOutBounce(1 - t);\n      },\n      easeOutBounce: function (t) {\n        if ((t /= 1) < 1 / 2.75) {\n          return 1 * (7.5625 * t * t);\n        } else if (t < 2 / 2.75) {\n          return 1 * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75);\n        } else if (t < 2.5 / 2.75) {\n          return 1 * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375);\n        } else {\n          return 1 * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);\n        }\n      },\n      easeInOutBounce: function (t) {\n        if (t < 1 / 2) {\n          return easingEffects.easeInBounce(t * 2) * 0.5;\n        }\n        return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n      }\n    },\n    //Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n    requestAnimFrame = helpers.requestAnimFrame = function () {\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(),\n    cancelAnimFrame = helpers.cancelAnimFrame = function () {\n      return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame || function (callback) {\n        return window.clearTimeout(callback, 1000 / 60);\n      };\n    }(),\n    animationLoop = helpers.animationLoop = function (callback, totalSteps, easingString, onProgress, onComplete, chartInstance) {\n      var currentStep = 0,\n        easingFunction = easingEffects[easingString] || easingEffects.linear;\n      var animationFrame = function () {\n        currentStep++;\n        var stepDecimal = currentStep / totalSteps;\n        var easeDecimal = easingFunction(stepDecimal);\n        callback.call(chartInstance, easeDecimal, stepDecimal, currentStep);\n        onProgress.call(chartInstance, easeDecimal, stepDecimal);\n        if (currentStep < totalSteps) {\n          chartInstance.animationFrame = requestAnimFrame(animationFrame);\n        } else {\n          onComplete.apply(chartInstance);\n        }\n      };\n      requestAnimFrame(animationFrame);\n    },\n    //-- DOM methods\n    getRelativePosition = helpers.getRelativePosition = function (evt) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt,\n        canvas = evt.currentTarget || evt.srcElement,\n        boundingRect = canvas.getBoundingClientRect();\n      if (e.touches) {\n        mouseX = e.touches[0].clientX - boundingRect.left;\n        mouseY = e.touches[0].clientY - boundingRect.top;\n      } else {\n        mouseX = e.clientX - boundingRect.left;\n        mouseY = e.clientY - boundingRect.top;\n      }\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    },\n    addEvent = helpers.addEvent = function (node, eventType, method) {\n      if (node.addEventListener) {\n        node.addEventListener(eventType, method);\n      } else if (node.attachEvent) {\n        node.attachEvent(\"on\" + eventType, method);\n      } else {\n        node[\"on\" + eventType] = method;\n      }\n    },\n    removeEvent = helpers.removeEvent = function (node, eventType, handler) {\n      if (node.removeEventListener) {\n        node.removeEventListener(eventType, handler, false);\n      } else if (node.detachEvent) {\n        node.detachEvent(\"on\" + eventType, handler);\n      } else {\n        node[\"on\" + eventType] = noop;\n      }\n    },\n    bindEvents = helpers.bindEvents = function (chartInstance, arrayOfEvents, handler) {\n      // Create the events object if it's not already present\n      if (!chartInstance.events) chartInstance.events = {};\n      each(arrayOfEvents, function (eventName) {\n        chartInstance.events[eventName] = function () {\n          handler.apply(chartInstance, arguments);\n        };\n        addEvent(chartInstance.chart.canvas, eventName, chartInstance.events[eventName]);\n      });\n    },\n    unbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n      each(arrayOfEvents, function (handler, eventName) {\n        removeEvent(chartInstance.chart.canvas, eventName, handler);\n      });\n    },\n    getMaximumWidth = helpers.getMaximumWidth = function (domNode) {\n      var container = domNode.parentNode,\n        padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right'));\n      // TODO = check cross browser stuff with this.\n      return container ? container.clientWidth - padding : 0;\n    },\n    getMaximumHeight = helpers.getMaximumHeight = function (domNode) {\n      var container = domNode.parentNode,\n        padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top'));\n      // TODO = check cross browser stuff with this.\n      return container ? container.clientHeight - padding : 0;\n    },\n    getStyle = helpers.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    },\n    getMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth,\n    // legacy support\n    retinaScale = helpers.retinaScale = function (chart) {\n      var ctx = chart.ctx,\n        width = chart.canvas.width,\n        height = chart.canvas.height;\n      if (window.devicePixelRatio) {\n        ctx.canvas.style.width = width + \"px\";\n        ctx.canvas.style.height = height + \"px\";\n        ctx.canvas.height = height * window.devicePixelRatio;\n        ctx.canvas.width = width * window.devicePixelRatio;\n        ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n      }\n    },\n    //-- Canvas methods\n    clear = helpers.clear = function (chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n    fontString = helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\n    },\n    longestText = helpers.longestText = function (ctx, font, arrayOfStrings) {\n      ctx.font = font;\n      var longest = 0;\n      each(arrayOfStrings, function (string) {\n        var textWidth = ctx.measureText(string).width;\n        longest = textWidth > longest ? textWidth : longest;\n      });\n      return longest;\n    },\n    drawRoundedRectangle = helpers.drawRoundedRectangle = function (ctx, x, y, width, height, radius) {\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n    };\n\n  //Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  //Destroy method on the chart will remove the instance of the chart from this reference.\n  Chart.instances = {};\n  Chart.Type = function (data, options, chart) {\n    this.options = options;\n    this.chart = chart;\n    this.id = uid();\n    //Add the chart instance to the global namespace\n    Chart.instances[this.id] = this;\n\n    // Initialize is always called when a chart type is created\n    // By default it is a no op, but it should be extended\n    if (options.responsive) {\n      this.resize();\n    }\n    this.initialize.call(this, data);\n  };\n\n  //Core methods that'll be a part of every chart type\n  extend(Chart.Type.prototype, {\n    initialize: function () {\n      return this;\n    },\n    clear: function () {\n      clear(this.chart);\n      return this;\n    },\n    stop: function () {\n      // Stops any current animation loop occuring\n      Chart.animationService.cancelAnimation(this);\n      return this;\n    },\n    resize: function (callback) {\n      this.stop();\n      var canvas = this.chart.canvas,\n        newWidth = getMaximumWidth(this.chart.canvas),\n        newHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n      canvas.width = this.chart.width = newWidth;\n      canvas.height = this.chart.height = newHeight;\n      retinaScale(this.chart);\n      if (typeof callback === \"function\") {\n        callback.apply(this, Array.prototype.slice.call(arguments, 1));\n      }\n      return this;\n    },\n    reflow: noop,\n    render: function (reflow) {\n      if (reflow) {\n        this.reflow();\n      }\n      if (this.options.animation && !reflow) {\n        var animation = new Chart.Animation();\n        animation.numSteps = this.options.animationSteps;\n        animation.easing = this.options.animationEasing;\n\n        // render function\n        animation.render = function (chartInstance, animationObject) {\n          var easingFunction = helpers.easingEffects[animationObject.easing];\n          var stepDecimal = animationObject.currentStep / animationObject.numSteps;\n          var easeDecimal = easingFunction(stepDecimal);\n          chartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n        };\n\n        // user events\n        animation.onAnimationProgress = this.options.onAnimationProgress;\n        animation.onAnimationComplete = this.options.onAnimationComplete;\n        Chart.animationService.addAnimation(this, animation);\n      } else {\n        this.draw();\n        this.options.onAnimationComplete.call(this);\n      }\n      return this;\n    },\n    generateLegend: function () {\n      return helpers.template(this.options.legendTemplate, this);\n    },\n    destroy: function () {\n      this.stop();\n      this.clear();\n      unbindEvents(this, this.events);\n      var canvas = this.chart.canvas;\n\n      // Reset canvas height/width attributes starts a fresh with the canvas context\n      canvas.width = this.chart.width;\n      canvas.height = this.chart.height;\n\n      // < IE9 doesn't support removeProperty\n      if (canvas.style.removeProperty) {\n        canvas.style.removeProperty('width');\n        canvas.style.removeProperty('height');\n      } else {\n        canvas.style.removeAttribute('width');\n        canvas.style.removeAttribute('height');\n      }\n      delete Chart.instances[this.id];\n    },\n    showTooltip: function (ChartElements, forceRedraw) {\n      // Only redraw the chart if we've actually changed what we're hovering on.\n      if (typeof this.activeElements === 'undefined') this.activeElements = [];\n      var isChanged = function (Elements) {\n        var changed = false;\n        if (Elements.length !== this.activeElements.length) {\n          changed = true;\n          return changed;\n        }\n        each(Elements, function (element, index) {\n          if (element !== this.activeElements[index]) {\n            changed = true;\n          }\n        }, this);\n        return changed;\n      }.call(this, ChartElements);\n      if (!isChanged && !forceRedraw) {\n        return;\n      } else {\n        this.activeElements = ChartElements;\n      }\n      this.draw();\n      if (this.options.customTooltips) {\n        this.options.customTooltips(false);\n      }\n      if (ChartElements.length > 0) {\n        // If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n        if (this.datasets && this.datasets.length > 1) {\n          var dataArray, dataIndex;\n          for (var i = this.datasets.length - 1; i >= 0; i--) {\n            dataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n            dataIndex = indexOf(dataArray, ChartElements[0]);\n            if (dataIndex !== -1) {\n              break;\n            }\n          }\n          var tooltipLabels = [],\n            tooltipColors = [],\n            medianPosition = function (index) {\n              // Get all the points at that particular index\n              var Elements = [],\n                dataCollection,\n                xPositions = [],\n                yPositions = [],\n                xMax,\n                yMax,\n                xMin,\n                yMin;\n              helpers.each(this.datasets, function (dataset) {\n                dataCollection = dataset.points || dataset.bars || dataset.segments;\n                if (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()) {\n                  Elements.push(dataCollection[dataIndex]);\n                }\n              });\n              helpers.each(Elements, function (element) {\n                xPositions.push(element.x);\n                yPositions.push(element.y);\n\n                //Include any colour information about the element\n                tooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n                tooltipColors.push({\n                  fill: element._saved.fillColor || element.fillColor,\n                  stroke: element._saved.strokeColor || element.strokeColor\n                });\n              }, this);\n              yMin = min(yPositions);\n              yMax = max(yPositions);\n              xMin = min(xPositions);\n              xMax = max(xPositions);\n              return {\n                x: xMin > this.chart.width / 2 ? xMin : xMax,\n                y: (yMin + yMax) / 2\n              };\n            }.call(this, dataIndex);\n          new Chart.MultiTooltip({\n            x: medianPosition.x,\n            y: medianPosition.y,\n            xPadding: this.options.tooltipXPadding,\n            yPadding: this.options.tooltipYPadding,\n            xOffset: this.options.tooltipXOffset,\n            fillColor: this.options.tooltipFillColor,\n            textColor: this.options.tooltipFontColor,\n            fontFamily: this.options.tooltipFontFamily,\n            fontStyle: this.options.tooltipFontStyle,\n            fontSize: this.options.tooltipFontSize,\n            titleTextColor: this.options.tooltipTitleFontColor,\n            titleFontFamily: this.options.tooltipTitleFontFamily,\n            titleFontStyle: this.options.tooltipTitleFontStyle,\n            titleFontSize: this.options.tooltipTitleFontSize,\n            cornerRadius: this.options.tooltipCornerRadius,\n            labels: tooltipLabels,\n            legendColors: tooltipColors,\n            legendColorBackground: this.options.multiTooltipKeyBackground,\n            title: template(this.options.tooltipTitleTemplate, ChartElements[0]),\n            chart: this.chart,\n            ctx: this.chart.ctx,\n            custom: this.options.customTooltips\n          }).draw();\n        } else {\n          each(ChartElements, function (Element) {\n            var tooltipPosition = Element.tooltipPosition();\n            new Chart.Tooltip({\n              x: Math.round(tooltipPosition.x),\n              y: Math.round(tooltipPosition.y),\n              xPadding: this.options.tooltipXPadding,\n              yPadding: this.options.tooltipYPadding,\n              fillColor: this.options.tooltipFillColor,\n              textColor: this.options.tooltipFontColor,\n              fontFamily: this.options.tooltipFontFamily,\n              fontStyle: this.options.tooltipFontStyle,\n              fontSize: this.options.tooltipFontSize,\n              caretHeight: this.options.tooltipCaretSize,\n              cornerRadius: this.options.tooltipCornerRadius,\n              text: template(this.options.tooltipTemplate, Element),\n              chart: this.chart,\n              custom: this.options.customTooltips\n            }).draw();\n          }, this);\n        }\n      }\n      return this;\n    },\n    toBase64Image: function () {\n      return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n    }\n  });\n  Chart.Type.extend = function (extensions) {\n    var parent = this;\n    var ChartType = function () {\n      return parent.apply(this, arguments);\n    };\n\n    //Copy the prototype object of the this class\n    ChartType.prototype = clone(parent.prototype);\n    //Now overwrite some of the properties in the base class with the new extensions\n    extend(ChartType.prototype, extensions);\n    ChartType.extend = Chart.Type.extend;\n    if (extensions.name || parent.prototype.name) {\n      var chartName = extensions.name || parent.prototype.name;\n      //Assign any potential default values of the new chart type\n\n      //If none are defined, we'll use a clone of the chart type this is being extended from.\n      //I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n      //doesn't define some defaults of their own.\n\n      var baseDefaults = Chart.defaults[parent.prototype.name] ? clone(Chart.defaults[parent.prototype.name]) : {};\n      Chart.defaults[chartName] = extend(baseDefaults, extensions.defaults);\n      Chart.types[chartName] = ChartType;\n\n      //Register this new chart type in the Chart prototype\n      Chart.prototype[chartName] = function (data, options) {\n        var config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n        return new ChartType(data, config, this);\n      };\n    } else {\n      warn(\"Name not provided for this chart, so it hasn't been registered\");\n    }\n    return parent;\n  };\n  Chart.Element = function (configuration) {\n    extend(this, configuration);\n    this.initialize.apply(this, arguments);\n    this.save();\n  };\n  extend(Chart.Element.prototype, {\n    initialize: function () {},\n    restore: function (props) {\n      if (!props) {\n        extend(this, this._saved);\n      } else {\n        each(props, function (key) {\n          this[key] = this._saved[key];\n        }, this);\n      }\n      return this;\n    },\n    save: function () {\n      this._saved = clone(this);\n      delete this._saved._saved;\n      return this;\n    },\n    update: function (newProps) {\n      each(newProps, function (value, key) {\n        this._saved[key] = this[key];\n        this[key] = value;\n      }, this);\n      return this;\n    },\n    transition: function (props, ease) {\n      each(props, function (value, key) {\n        this[key] = (value - this._saved[key]) * ease + this._saved[key];\n      }, this);\n      return this;\n    },\n    tooltipPosition: function () {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    },\n    hasValue: function () {\n      return isNumber(this.value);\n    }\n  });\n  Chart.Element.extend = inherits;\n  Chart.Point = Chart.Element.extend({\n    display: true,\n    inRange: function (chartX, chartY) {\n      var hitDetectionRange = this.hitDetectionRadius + this.radius;\n      return Math.pow(chartX - this.x, 2) + Math.pow(chartY - this.y, 2) < Math.pow(hitDetectionRange, 2);\n    },\n    draw: function () {\n      if (this.display) {\n        var ctx = this.ctx;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.strokeStyle = this.strokeColor;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.fillStyle = this.fillColor;\n        ctx.fill();\n        ctx.stroke();\n      }\n\n      //Quick debug for bezier curve splining\n      //Highlights control points and the line between them.\n      //Handy for dev - stripped in the min version.\n\n      // ctx.save();\n      // ctx.fillStyle = \"black\";\n      // ctx.strokeStyle = \"black\"\n      // ctx.beginPath();\n      // ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n      // ctx.fill();\n\n      // ctx.beginPath();\n      // ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n      // ctx.fill();\n\n      // ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n      // ctx.lineTo(this.x, this.y);\n      // ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n      // ctx.stroke();\n\n      // ctx.restore();\n    }\n  });\n  Chart.Arc = Chart.Element.extend({\n    inRange: function (chartX, chartY) {\n      var pointRelativePosition = helpers.getAngleFromPoint(this, {\n        x: chartX,\n        y: chartY\n      });\n\n      // Normalize all angles to 0 - 2*PI (0 - 360°)\n      var pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n        startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n        endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360;\n\n      // Calculate wether the pointRelativeAngle is between the start and the end angle\n      var betweenAngles = endAngle < startAngle ? pointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle : pointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle;\n\n      //Check if within the range of the open/close angle\n      var withinRadius = pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius;\n      return betweenAngles && withinRadius;\n      //Ensure within the outside of the arc centre, but inside arc outer\n    },\n    tooltipPosition: function () {\n      var centreAngle = this.startAngle + (this.endAngle - this.startAngle) / 2,\n        rangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n      return {\n        x: this.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: this.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function (animationPercent) {\n      var easingDecimal = animationPercent || 1;\n      var ctx = this.ctx;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n      ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n      ctx.closePath();\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.strokeWidth;\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n      ctx.lineJoin = 'bevel';\n      if (this.showStroke) {\n        ctx.stroke();\n      }\n    }\n  });\n  Chart.Rectangle = Chart.Element.extend({\n    draw: function () {\n      var ctx = this.ctx,\n        halfWidth = this.width / 2,\n        leftX = this.x - halfWidth,\n        rightX = this.x + halfWidth,\n        top = this.base - (this.base - this.y),\n        halfStroke = this.strokeWidth / 2;\n\n      // Canvas doesn't allow us to stroke inside the width so we can\n      // adjust the sizes to fit if we're setting a stroke on the line\n      if (this.showStroke) {\n        leftX += halfStroke;\n        rightX -= halfStroke;\n        top += halfStroke;\n      }\n      ctx.beginPath();\n      ctx.fillStyle = this.fillColor;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.strokeWidth;\n\n      // It'd be nice to keep this class totally generic to any rectangle\n      // and simply specify which border to miss out.\n      ctx.moveTo(leftX, this.base);\n      ctx.lineTo(leftX, top);\n      ctx.lineTo(rightX, top);\n      ctx.lineTo(rightX, this.base);\n      ctx.fill();\n      if (this.showStroke) {\n        ctx.stroke();\n      }\n    },\n    height: function () {\n      return this.base - this.y;\n    },\n    inRange: function (chartX, chartY) {\n      return chartX >= this.x - this.width / 2 && chartX <= this.x + this.width / 2 && chartY >= this.y && chartY <= this.base;\n    }\n  });\n  Chart.Animation = Chart.Element.extend({\n    currentStep: null,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: \"\",\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation \n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n  });\n  Chart.Tooltip = Chart.Element.extend({\n    draw: function () {\n      var ctx = this.chart.ctx;\n      ctx.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      this.xAlign = \"center\";\n      this.yAlign = \"above\";\n\n      //Distance between the actual element.y position and the start of the tooltip caret\n      var caretPadding = this.caretPadding = 2;\n      var tooltipWidth = ctx.measureText(this.text).width + 2 * this.xPadding,\n        tooltipRectHeight = this.fontSize + 2 * this.yPadding,\n        tooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n      if (this.x + tooltipWidth / 2 > this.chart.width) {\n        this.xAlign = \"left\";\n      } else if (this.x - tooltipWidth / 2 < 0) {\n        this.xAlign = \"right\";\n      }\n      if (this.y - tooltipHeight < 0) {\n        this.yAlign = \"below\";\n      }\n      var tooltipX = this.x - tooltipWidth / 2,\n        tooltipY = this.y - tooltipHeight;\n      ctx.fillStyle = this.fillColor;\n\n      // Custom Tooltips\n      if (this.custom) {\n        this.custom(this);\n      } else {\n        switch (this.yAlign) {\n          case \"above\":\n            //Draw a caret above the x/y\n            ctx.beginPath();\n            ctx.moveTo(this.x, this.y - caretPadding);\n            ctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n            ctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n            ctx.closePath();\n            ctx.fill();\n            break;\n          case \"below\":\n            tooltipY = this.y + caretPadding + this.caretHeight;\n            //Draw a caret below the x/y\n            ctx.beginPath();\n            ctx.moveTo(this.x, this.y + caretPadding);\n            ctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n            ctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        }\n        switch (this.xAlign) {\n          case \"left\":\n            tooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n            break;\n          case \"right\":\n            tooltipX = this.x - (this.cornerRadius + this.caretHeight);\n            break;\n        }\n        drawRoundedRectangle(ctx, tooltipX, tooltipY, tooltipWidth, tooltipRectHeight, this.cornerRadius);\n        ctx.fill();\n        ctx.fillStyle = this.textColor;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.text, tooltipX + tooltipWidth / 2, tooltipY + tooltipRectHeight / 2);\n      }\n    }\n  });\n  Chart.MultiTooltip = Chart.Element.extend({\n    initialize: function () {\n      this.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      this.titleFont = fontString(this.titleFontSize, this.titleFontStyle, this.titleFontFamily);\n      this.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n      this.height = this.labels.length * this.fontSize + (this.labels.length - 1) * (this.fontSize / 2) + this.yPadding * 2 + this.titleHeight;\n      this.ctx.font = this.titleFont;\n      var titleWidth = this.ctx.measureText(this.title).width,\n        //Label has a legend square as well so account for this.\n        labelWidth = longestText(this.ctx, this.font, this.labels) + this.fontSize + 3,\n        longestTextWidth = max([labelWidth, titleWidth]);\n      this.width = longestTextWidth + this.xPadding * 2;\n      var halfHeight = this.height / 2;\n\n      //Check to ensure the height will fit on the canvas\n      if (this.y - halfHeight < 0) {\n        this.y = halfHeight;\n      } else if (this.y + halfHeight > this.chart.height) {\n        this.y = this.chart.height - halfHeight;\n      }\n\n      //Decide whether to align left or right based on position on canvas\n      if (this.x > this.chart.width / 2) {\n        this.x -= this.xOffset + this.width;\n      } else {\n        this.x += this.xOffset;\n      }\n    },\n    getLineHeight: function (index) {\n      var baseLineHeight = this.y - this.height / 2 + this.yPadding,\n        afterTitleIndex = index - 1;\n\n      //If the index is zero, we're getting the title\n      if (index === 0) {\n        return baseLineHeight + this.titleHeight / 3;\n      } else {\n        return baseLineHeight + (this.fontSize * 1.5 * afterTitleIndex + this.fontSize / 2) + this.titleHeight;\n      }\n    },\n    draw: function () {\n      // Custom Tooltips\n      if (this.custom) {\n        this.custom(this);\n      } else {\n        drawRoundedRectangle(this.ctx, this.x, this.y - this.height / 2, this.width, this.height, this.cornerRadius);\n        var ctx = this.ctx;\n        ctx.fillStyle = this.fillColor;\n        ctx.fill();\n        ctx.closePath();\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = this.titleTextColor;\n        ctx.font = this.titleFont;\n        ctx.fillText(this.title, this.x + this.xPadding, this.getLineHeight(0));\n        ctx.font = this.font;\n        helpers.each(this.labels, function (label, index) {\n          ctx.fillStyle = this.textColor;\n          ctx.fillText(label, this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n          //A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n          //ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n          //Instead we'll make a white filled block to put the legendColour palette over.\n\n          ctx.fillStyle = this.legendColorBackground;\n          ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize / 2, this.fontSize, this.fontSize);\n          ctx.fillStyle = this.legendColors[index].fill;\n          ctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize / 2, this.fontSize, this.fontSize);\n        }, this);\n      }\n    }\n  });\n  Chart.Scale = Chart.Element.extend({\n    initialize: function () {\n      this.fit();\n    },\n    buildYLabels: function () {\n      this.yLabels = [];\n      var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n      for (var i = 0; i <= this.steps; i++) {\n        this.yLabels.push(template(this.templateString, {\n          value: (this.min + i * this.stepValue).toFixed(stepDecimalPlaces)\n        }));\n      }\n      this.yLabelWidth = this.display && this.showLabels ? longestText(this.ctx, this.font, this.yLabels) + 10 : 0;\n    },\n    addXLabel: function (label) {\n      this.xLabels.push(label);\n      this.valuesCount++;\n      this.fit();\n    },\n    removeXLabel: function () {\n      this.xLabels.shift();\n      this.valuesCount--;\n      this.fit();\n    },\n    // Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n    fit: function () {\n      // First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n      // To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n      this.startPoint = this.display ? this.fontSize : 0;\n      this.endPoint = this.display ? this.height - this.fontSize * 1.5 - 5 : this.height; // -5 to pad labels\n\n      // Apply padding settings to the start and end point.\n      this.startPoint += this.padding;\n      this.endPoint -= this.padding;\n\n      // Cache the starting endpoint, excluding the space for x labels\n      var cachedEndPoint = this.endPoint;\n\n      // Cache the starting height, so can determine if we need to recalculate the scale yAxis\n      var cachedHeight = this.endPoint - this.startPoint,\n        cachedYLabelWidth;\n\n      // Build the current yLabels so we have an idea of what size they'll be to start\n      /*\n       *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n       *\n      \tthis.steps;\n      \tthis.stepValue;\n      \tthis.min;\n      \tthis.max;\n       *\n       */\n      this.calculateYRange(cachedHeight);\n\n      // With these properties set we can now build the array of yLabels\n      // and also the width of the largest yLabel\n      this.buildYLabels();\n      this.calculateXLabelRotation();\n      while (cachedHeight > this.endPoint - this.startPoint) {\n        cachedHeight = this.endPoint - this.startPoint;\n        cachedYLabelWidth = this.yLabelWidth;\n        this.calculateYRange(cachedHeight);\n        this.buildYLabels();\n\n        // Only go through the xLabel loop again if the yLabel width has changed\n        if (cachedYLabelWidth < this.yLabelWidth) {\n          this.endPoint = cachedEndPoint;\n          this.calculateXLabelRotation();\n        }\n      }\n    },\n    calculateXLabelRotation: function () {\n      //Get the width of each grid by calculating the difference\n      //between x offsets between 0 and 1.\n\n      this.ctx.font = this.font;\n      var firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n        lastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n        firstRotated,\n        lastRotated;\n      this.xScalePaddingRight = lastWidth / 2 + 3;\n      this.xScalePaddingLeft = firstWidth / 2 > this.yLabelWidth ? firstWidth / 2 : this.yLabelWidth;\n      this.xLabelRotation = 0;\n      if (this.display) {\n        var originalLabelWidth = longestText(this.ctx, this.font, this.xLabels),\n          cosRotation,\n          firstRotatedWidth;\n        this.xLabelWidth = originalLabelWidth;\n        //Allow 3 pixels x2 padding either side for label readability\n        var xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n        //Max label rotate should be 90 - also act as a loop counter\n        while (this.xLabelWidth > xGridWidth && this.xLabelRotation === 0 || this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0) {\n          cosRotation = Math.cos(toRadians(this.xLabelRotation));\n          firstRotated = cosRotation * firstWidth;\n          lastRotated = cosRotation * lastWidth;\n\n          // We're right aligning the text now.\n          if (firstRotated + this.fontSize / 2 > this.yLabelWidth) {\n            this.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n          }\n          this.xScalePaddingRight = this.fontSize / 2;\n          this.xLabelRotation++;\n          this.xLabelWidth = cosRotation * originalLabelWidth;\n        }\n        if (this.xLabelRotation > 0) {\n          this.endPoint -= Math.sin(toRadians(this.xLabelRotation)) * originalLabelWidth + 3;\n        }\n      } else {\n        this.xLabelWidth = 0;\n        this.xScalePaddingRight = this.padding;\n        this.xScalePaddingLeft = this.padding;\n      }\n    },\n    // Needs to be overidden in each Chart type\n    // Otherwise we need to pass all the data into the scale class\n    calculateYRange: noop,\n    drawingArea: function () {\n      return this.startPoint - this.endPoint;\n    },\n    calculateY: function (value) {\n      var scalingFactor = this.drawingArea() / (this.min - this.max);\n      return this.endPoint - scalingFactor * (value - this.min);\n    },\n    calculateX: function (index) {\n      var isRotated = this.xLabelRotation > 0,\n        // innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n        innerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n        valueWidth = innerWidth / Math.max(this.valuesCount - (this.offsetGridLines ? 0 : 1), 1),\n        valueOffset = valueWidth * index + this.xScalePaddingLeft;\n      if (this.offsetGridLines) {\n        valueOffset += valueWidth / 2;\n      }\n      return Math.round(valueOffset);\n    },\n    update: function (newProps) {\n      helpers.extend(this, newProps);\n      this.fit();\n    },\n    draw: function () {\n      var ctx = this.ctx,\n        yLabelGap = (this.endPoint - this.startPoint) / this.steps,\n        xStart = Math.round(this.xScalePaddingLeft);\n      if (this.display) {\n        ctx.fillStyle = this.textColor;\n        ctx.font = this.font;\n        each(this.yLabels, function (labelString, index) {\n          var yLabelCenter = this.endPoint - yLabelGap * index,\n            linePositionY = Math.round(yLabelCenter),\n            drawHorizontalLine = this.showHorizontalLines;\n          ctx.textAlign = \"right\";\n          ctx.textBaseline = \"middle\";\n          if (this.showLabels) {\n            ctx.fillText(labelString, xStart - 10, yLabelCenter);\n          }\n\n          // This is X axis, so draw it\n          if (index === 0 && !drawHorizontalLine) {\n            drawHorizontalLine = true;\n          }\n          if (drawHorizontalLine) {\n            ctx.beginPath();\n          }\n          if (index > 0) {\n            // This is a grid line in the centre, so drop that\n            ctx.lineWidth = this.gridLineWidth;\n            ctx.strokeStyle = this.gridLineColor;\n          } else {\n            // This is the first line on the scale\n            ctx.lineWidth = this.lineWidth;\n            ctx.strokeStyle = this.lineColor;\n          }\n          linePositionY += helpers.aliasPixel(ctx.lineWidth);\n          if (drawHorizontalLine) {\n            ctx.moveTo(xStart, linePositionY);\n            ctx.lineTo(this.width, linePositionY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n          ctx.lineWidth = this.lineWidth;\n          ctx.strokeStyle = this.lineColor;\n          ctx.beginPath();\n          ctx.moveTo(xStart - 5, linePositionY);\n          ctx.lineTo(xStart, linePositionY);\n          ctx.stroke();\n          ctx.closePath();\n        }, this);\n        each(this.xLabels, function (label, index) {\n          var xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n            // Check to see if line/bar here and decide where to place the line\n            linePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n            isRotated = this.xLabelRotation > 0,\n            drawVerticalLine = this.showVerticalLines;\n\n          // This is Y axis, so draw it\n          if (index === 0 && !drawVerticalLine) {\n            drawVerticalLine = true;\n          }\n          if (drawVerticalLine) {\n            ctx.beginPath();\n          }\n          if (index > 0) {\n            // This is a grid line in the centre, so drop that\n            ctx.lineWidth = this.gridLineWidth;\n            ctx.strokeStyle = this.gridLineColor;\n          } else {\n            // This is the first line on the scale\n            ctx.lineWidth = this.lineWidth;\n            ctx.strokeStyle = this.lineColor;\n          }\n          if (drawVerticalLine) {\n            ctx.moveTo(linePos, this.endPoint);\n            ctx.lineTo(linePos, this.startPoint - 3);\n            ctx.stroke();\n            ctx.closePath();\n          }\n          ctx.lineWidth = this.lineWidth;\n          ctx.strokeStyle = this.lineColor;\n\n          // Small lines at the bottom of the base grid line\n          ctx.beginPath();\n          ctx.moveTo(linePos, this.endPoint);\n          ctx.lineTo(linePos, this.endPoint + 5);\n          ctx.stroke();\n          ctx.closePath();\n          ctx.save();\n          ctx.translate(xPos, isRotated ? this.endPoint + 12 : this.endPoint + 8);\n          ctx.rotate(toRadians(this.xLabelRotation) * -1);\n          ctx.font = this.font;\n          ctx.textAlign = isRotated ? \"right\" : \"center\";\n          ctx.textBaseline = isRotated ? \"middle\" : \"top\";\n          ctx.fillText(label, 0, 0);\n          ctx.restore();\n        }, this);\n      }\n    }\n  });\n  Chart.RadialScale = Chart.Element.extend({\n    initialize: function () {\n      this.size = min([this.height, this.width]);\n      this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2;\n    },\n    calculateCenterOffset: function (value) {\n      // Take into account half font size + the yPadding of the top value\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      return (value - this.min) * scalingFactor;\n    },\n    update: function () {\n      if (!this.lineArc) {\n        this.setScaleSize();\n      } else {\n        this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2;\n      }\n      this.buildYLabels();\n    },\n    buildYLabels: function () {\n      this.yLabels = [];\n      var stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n      for (var i = 0; i <= this.steps; i++) {\n        this.yLabels.push(template(this.templateString, {\n          value: (this.min + i * this.stepValue).toFixed(stepDecimalPlaces)\n        }));\n      }\n    },\n    getCircumference: function () {\n      return Math.PI * 2 / this.valuesCount;\n    },\n    setScaleSize: function () {\n      /*\n       * Right, this is really confusing and there is a lot of maths going on here\n       * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n       *\n       * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n       *\n       * Solution:\n       *\n       * We assume the radius of the polygon is half the size of the canvas at first\n       * at each index we check if the text overlaps.\n       *\n       * Where it does, we store that angle and that index.\n       *\n       * After finding the largest index and angle we calculate how much we need to remove\n       * from the shape radius to move the point inwards by that x.\n       *\n       * We average the left and right distances to get the maximum shape radius that can fit in the box\n       * along with labels.\n       *\n       * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n       * on each side, removing that from the size, halving it and adding the left x protrusion width.\n       *\n       * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n       * and position it in the most space efficient manner\n       *\n       * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n       */\n\n      // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n      // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n      var largestPossibleRadius = min([this.height / 2 - this.pointLabelFontSize - 5, this.width / 2]),\n        pointPosition,\n        i,\n        textWidth,\n        halfTextWidth,\n        furthestRight = this.width,\n        furthestRightIndex,\n        furthestRightAngle,\n        furthestLeft = 0,\n        furthestLeftIndex,\n        furthestLeftAngle,\n        xProtrusionLeft,\n        xProtrusionRight,\n        radiusReductionRight,\n        radiusReductionLeft,\n        maxWidthRadius;\n      this.ctx.font = fontString(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily);\n      for (i = 0; i < this.valuesCount; i++) {\n        // 5px to space the text slightly out - similar to what we do in the draw function.\n        pointPosition = this.getPointPosition(i, largestPossibleRadius);\n        textWidth = this.ctx.measureText(template(this.templateString, {\n          value: this.labels[i]\n        })).width + 5;\n        if (i === 0 || i === this.valuesCount / 2) {\n          // If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n          // of the radar chart, so text will be aligned centrally, so we'll half it and compare\n          // w/left and right text sizes\n          halfTextWidth = textWidth / 2;\n          if (pointPosition.x + halfTextWidth > furthestRight) {\n            furthestRight = pointPosition.x + halfTextWidth;\n            furthestRightIndex = i;\n          }\n          if (pointPosition.x - halfTextWidth < furthestLeft) {\n            furthestLeft = pointPosition.x - halfTextWidth;\n            furthestLeftIndex = i;\n          }\n        } else if (i < this.valuesCount / 2) {\n          // Less than half the values means we'll left align the text\n          if (pointPosition.x + textWidth > furthestRight) {\n            furthestRight = pointPosition.x + textWidth;\n            furthestRightIndex = i;\n          }\n        } else if (i > this.valuesCount / 2) {\n          // More than half the values means we'll right align the text\n          if (pointPosition.x - textWidth < furthestLeft) {\n            furthestLeft = pointPosition.x - textWidth;\n            furthestLeftIndex = i;\n          }\n        }\n      }\n      xProtrusionLeft = furthestLeft;\n      xProtrusionRight = Math.ceil(furthestRight - this.width);\n      furthestRightAngle = this.getIndexAngle(furthestRightIndex);\n      furthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n      radiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\n      radiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\n\n      // Ensure we actually need to reduce the size of the chart\n      radiusReductionRight = isNumber(radiusReductionRight) ? radiusReductionRight : 0;\n      radiusReductionLeft = isNumber(radiusReductionLeft) ? radiusReductionLeft : 0;\n      this.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2;\n\n      //this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n      this.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n    },\n    setCenterPoint: function (leftMovement, rightMovement) {\n      var maxRight = this.width - rightMovement - this.drawingArea,\n        maxLeft = leftMovement + this.drawingArea;\n      this.xCenter = (maxLeft + maxRight) / 2;\n      // Always vertically in the centre as the text height doesn't change\n      this.yCenter = this.height / 2;\n    },\n    getIndexAngle: function (index) {\n      var angleMultiplier = Math.PI * 2 / this.valuesCount;\n      // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier - Math.PI / 2;\n    },\n    getPointPosition: function (index, distanceFromCenter) {\n      var thisAngle = this.getIndexAngle(index);\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + this.yCenter\n      };\n    },\n    draw: function () {\n      if (this.display) {\n        var ctx = this.ctx;\n        each(this.yLabels, function (label, index) {\n          // Don't draw a centre value\n          if (index > 0) {\n            var yCenterOffset = index * (this.drawingArea / this.steps),\n              yHeight = this.yCenter - yCenterOffset,\n              pointPosition;\n\n            // Draw circular lines around the scale\n            if (this.lineWidth > 0) {\n              ctx.strokeStyle = this.lineColor;\n              ctx.lineWidth = this.lineWidth;\n              if (this.lineArc) {\n                ctx.beginPath();\n                ctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI * 2);\n                ctx.closePath();\n                ctx.stroke();\n              } else {\n                ctx.beginPath();\n                for (var i = 0; i < this.valuesCount; i++) {\n                  pointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + index * this.stepValue));\n                  if (i === 0) {\n                    ctx.moveTo(pointPosition.x, pointPosition.y);\n                  } else {\n                    ctx.lineTo(pointPosition.x, pointPosition.y);\n                  }\n                }\n                ctx.closePath();\n                ctx.stroke();\n              }\n            }\n            if (this.showLabels) {\n              ctx.font = fontString(this.fontSize, this.fontStyle, this.fontFamily);\n              if (this.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = this.backdropColor;\n                ctx.fillRect(this.xCenter - labelWidth / 2 - this.backdropPaddingX, yHeight - this.fontSize / 2 - this.backdropPaddingY, labelWidth + this.backdropPaddingX * 2, this.fontSize + this.backdropPaddingY * 2);\n              }\n              ctx.textAlign = 'center';\n              ctx.textBaseline = \"middle\";\n              ctx.fillStyle = this.fontColor;\n              ctx.fillText(label, this.xCenter, yHeight);\n            }\n          }\n        }, this);\n        if (!this.lineArc) {\n          ctx.lineWidth = this.angleLineWidth;\n          ctx.strokeStyle = this.angleLineColor;\n          for (var i = this.valuesCount - 1; i >= 0; i--) {\n            var centerOffset = null,\n              outerPosition = null;\n            if (this.angleLineWidth > 0 && i % this.angleLineInterval === 0) {\n              centerOffset = this.calculateCenterOffset(this.max);\n              outerPosition = this.getPointPosition(i, centerOffset);\n              ctx.beginPath();\n              ctx.moveTo(this.xCenter, this.yCenter);\n              ctx.lineTo(outerPosition.x, outerPosition.y);\n              ctx.stroke();\n              ctx.closePath();\n            }\n            if (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n              if (centerOffset == null) centerOffset = this.calculateCenterOffset(this.max);\n              if (outerPosition == null) outerPosition = this.getPointPosition(i, centerOffset);\n              var previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n              var nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n              var previousOuterHalfway = {\n                x: (previousOuterPosition.x + outerPosition.x) / 2,\n                y: (previousOuterPosition.y + outerPosition.y) / 2\n              };\n              var nextOuterHalfway = {\n                x: (outerPosition.x + nextOuterPosition.x) / 2,\n                y: (outerPosition.y + nextOuterPosition.y) / 2\n              };\n              ctx.beginPath();\n              ctx.moveTo(this.xCenter, this.yCenter);\n              ctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n              ctx.lineTo(outerPosition.x, outerPosition.y);\n              ctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n              ctx.fillStyle = this.backgroundColors[i];\n              ctx.fill();\n              ctx.closePath();\n            }\n            // Extra 3px out for some label spacing\n            var pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n            ctx.font = fontString(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily);\n            ctx.fillStyle = this.pointLabelFontColor;\n            var labelsCount = this.labels.length,\n              halfLabelsCount = this.labels.length / 2,\n              quarterLabelsCount = halfLabelsCount / 2,\n              upperHalf = i < quarterLabelsCount || i > labelsCount - quarterLabelsCount,\n              exactQuarter = i === quarterLabelsCount || i === labelsCount - quarterLabelsCount;\n            if (i === 0) {\n              ctx.textAlign = 'center';\n            } else if (i === halfLabelsCount) {\n              ctx.textAlign = 'center';\n            } else if (i < halfLabelsCount) {\n              ctx.textAlign = 'left';\n            } else {\n              ctx.textAlign = 'right';\n            }\n\n            // Set the correct text baseline based on outer positioning\n            if (exactQuarter) {\n              ctx.textBaseline = 'middle';\n            } else if (upperHalf) {\n              ctx.textBaseline = 'bottom';\n            } else {\n              ctx.textBaseline = 'top';\n            }\n            ctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n          }\n        }\n      }\n    }\n  });\n  Chart.animationService = {\n    frameDuration: 17,\n    animations: [],\n    dropFrames: 0,\n    addAnimation: function (chartInstance, animationObject) {\n      for (var index = 0; index < this.animations.length; ++index) {\n        if (this.animations[index].chartInstance === chartInstance) {\n          // replacing an in progress animation\n          this.animations[index].animationObject = animationObject;\n          return;\n        }\n      }\n      this.animations.push({\n        chartInstance: chartInstance,\n        animationObject: animationObject\n      });\n\n      // If there are no animations queued, manually kickstart a digest, for lack of a better word\n      if (this.animations.length == 1) {\n        helpers.requestAnimFrame.call(window, this.digestWrapper);\n      }\n    },\n    // Cancel the animation for a given chart instance\n    cancelAnimation: function (chartInstance) {\n      var index = helpers.findNextWhere(this.animations, function (animationWrapper) {\n        return animationWrapper.chartInstance === chartInstance;\n      });\n      if (index) {\n        this.animations.splice(index, 1);\n      }\n    },\n    // calls startDigest with the proper context\n    digestWrapper: function () {\n      Chart.animationService.startDigest.call(Chart.animationService);\n    },\n    startDigest: function () {\n      var startTime = Date.now();\n      var framesToDrop = 0;\n      if (this.dropFrames > 1) {\n        framesToDrop = Math.floor(this.dropFrames);\n        this.dropFrames -= framesToDrop;\n      }\n      for (var i = 0; i < this.animations.length; i++) {\n        if (this.animations[i].animationObject.currentStep === null) {\n          this.animations[i].animationObject.currentStep = 0;\n        }\n        this.animations[i].animationObject.currentStep += 1 + framesToDrop;\n        if (this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps) {\n          this.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n        }\n        this.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\n\n        // Check if executed the last frame.\n        if (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps) {\n          // Call onAnimationComplete\n          this.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance);\n          // Remove the animation.\n          this.animations.splice(i, 1);\n          // Keep the index in place to offset the splice\n          i--;\n        }\n      }\n      var endTime = Date.now();\n      var delay = endTime - startTime - this.frameDuration;\n      var frameDelay = delay / this.frameDuration;\n      if (frameDelay > 1) {\n        this.dropFrames += frameDelay;\n      }\n\n      // Do we have more stuff to animate?\n      if (this.animations.length > 0) {\n        helpers.requestAnimFrame.call(window, this.digestWrapper);\n      }\n    }\n  };\n\n  // Attach global event to resize each chart instance when the browser resizes\n  helpers.addEvent(window, \"resize\", function () {\n    // Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n    var timeout;\n    return function () {\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        each(Chart.instances, function (instance) {\n          // If the responsive flag is set in the chart instance config\n          // Cascade the resize event down to the chart.\n          if (instance.options.responsive) {\n            instance.resize(instance.render, true);\n          }\n        });\n      }, 50);\n    };\n  }());\n  if (amd) {\n    define('Chart', [], function () {\n      return Chart;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = Chart;\n  }\n  root.Chart = Chart;\n  Chart.noConflict = function () {\n    root.Chart = previous;\n    return Chart;\n  };\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n    Chart = root.Chart,\n    helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: true,\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n    //Boolean - If there is a stroke on each bar\n    barShowStroke: true,\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth: 2,\n    //Number - Spacing between each of the X value sets\n    barValueSpacing: 5,\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing: 1,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    name: \"Bar\",\n    defaults: defaultConfig,\n    initialize: function (data) {\n      //Expose options as a scope variable here so we can access it in the ScaleClass\n      var options = this.options;\n      this.ScaleClass = Chart.Scale.extend({\n        offsetGridLines: true,\n        calculateBarX: function (datasetCount, datasetIndex, barIndex) {\n          //Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n          var xWidth = this.calculateBaseWidth(),\n            xAbsolute = this.calculateX(barIndex) - xWidth / 2,\n            barWidth = this.calculateBarWidth(datasetCount);\n          return xAbsolute + barWidth * datasetIndex + datasetIndex * options.barDatasetSpacing + barWidth / 2;\n        },\n        calculateBaseWidth: function () {\n          return this.calculateX(1) - this.calculateX(0) - 2 * options.barValueSpacing;\n        },\n        calculateBarWidth: function (datasetCount) {\n          //The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n          var baseWidth = this.calculateBaseWidth() - (datasetCount - 1) * options.barDatasetSpacing;\n          return baseWidth / datasetCount;\n        }\n      });\n      this.datasets = [];\n\n      //Set up tooltip events on the chart\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeBars = evt.type !== 'mouseout' ? this.getBarsAtEvent(evt) : [];\n          this.eachBars(function (bar) {\n            bar.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activeBars, function (activeBar) {\n            if (activeBar) {\n              activeBar.fillColor = activeBar.highlightFill;\n              activeBar.strokeColor = activeBar.highlightStroke;\n            }\n          });\n          this.showTooltip(activeBars);\n        });\n      }\n\n      //Declare the extension of the default point, to cater for the options passed in to the constructor\n      this.BarClass = Chart.Rectangle.extend({\n        strokeWidth: this.options.barStrokeWidth,\n        showStroke: this.options.barShowStroke,\n        ctx: this.chart.ctx\n      });\n\n      //Iterate through each of the datasets, and build this into a property of the chart\n      helpers.each(data.datasets, function (dataset, datasetIndex) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          bars: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          datasetObject.bars.push(new this.BarClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            strokeColor: typeof dataset.strokeColor == 'object' ? dataset.strokeColor[index] : dataset.strokeColor,\n            fillColor: typeof dataset.fillColor == 'object' ? dataset.fillColor[index] : dataset.fillColor,\n            highlightFill: dataset.highlightFill ? typeof dataset.highlightFill == 'object' ? dataset.highlightFill[index] : dataset.highlightFill : typeof dataset.fillColor == 'object' ? dataset.fillColor[index] : dataset.fillColor,\n            highlightStroke: dataset.highlightStroke ? typeof dataset.highlightStroke == 'object' ? dataset.highlightStroke[index] : dataset.highlightStroke : typeof dataset.strokeColor == 'object' ? dataset.strokeColor[index] : dataset.strokeColor\n          }));\n        }, this);\n      }, this);\n      this.buildScale(data.labels);\n      this.BarClass.prototype.base = this.scale.endPoint;\n      this.eachBars(function (bar, index, datasetIndex) {\n        helpers.extend(bar, {\n          width: this.scale.calculateBarWidth(this.datasets.length),\n          x: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n          y: this.scale.endPoint\n        });\n        bar.save();\n      }, this);\n      this.render();\n    },\n    update: function () {\n      this.scale.update();\n      // Reset any highlight colours before updating.\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor', 'strokeColor']);\n      });\n      this.eachBars(function (bar) {\n        bar.save();\n      });\n      this.render();\n    },\n    eachBars: function (callback) {\n      helpers.each(this.datasets, function (dataset, datasetIndex) {\n        helpers.each(dataset.bars, callback, this, datasetIndex);\n      }, this);\n    },\n    getBarsAtEvent: function (e) {\n      var barsArray = [],\n        eventPosition = helpers.getRelativePosition(e),\n        datasetIterator = function (dataset) {\n          barsArray.push(dataset.bars[barIndex]);\n        },\n        barIndex;\n      for (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n        for (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n          if (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x, eventPosition.y)) {\n            helpers.each(this.datasets, datasetIterator);\n            return barsArray;\n          }\n        }\n      }\n      return barsArray;\n    },\n    buildScale: function (labels) {\n      var self = this;\n      var dataTotal = function () {\n        var values = [];\n        self.eachBars(function (bar) {\n          values.push(bar.value);\n        });\n        return values;\n      };\n      var scaleOptions = {\n        templateString: this.options.scaleLabel,\n        height: this.chart.height,\n        width: this.chart.width,\n        ctx: this.chart.ctx,\n        textColor: this.options.scaleFontColor,\n        fontSize: this.options.scaleFontSize,\n        fontStyle: this.options.scaleFontStyle,\n        fontFamily: this.options.scaleFontFamily,\n        valuesCount: labels.length,\n        beginAtZero: this.options.scaleBeginAtZero,\n        integersOnly: this.options.scaleIntegersOnly,\n        calculateYRange: function (currentHeight) {\n          var updatedRanges = helpers.calculateScaleRange(dataTotal(), currentHeight, this.fontSize, this.beginAtZero, this.integersOnly);\n          helpers.extend(this, updatedRanges);\n        },\n        xLabels: labels,\n        font: helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n        lineWidth: this.options.scaleLineWidth,\n        lineColor: this.options.scaleLineColor,\n        showHorizontalLines: this.options.scaleShowHorizontalLines,\n        showVerticalLines: this.options.scaleShowVerticalLines,\n        gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,\n        gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n        padding: this.options.showScale ? 0 : this.options.barShowStroke ? this.options.barStrokeWidth : 0,\n        showLabels: this.options.scaleShowLabels,\n        display: this.options.showScale\n      };\n      if (this.options.scaleOverride) {\n        helpers.extend(scaleOptions, {\n          calculateYRange: helpers.noop,\n          steps: this.options.scaleSteps,\n          stepValue: this.options.scaleStepWidth,\n          min: this.options.scaleStartValue,\n          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n        });\n      }\n      this.scale = new this.ScaleClass(scaleOptions);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        //Add a new point for each piece of data, passing any required data to draw.\n        this.datasets[datasetIndex].bars.push(new this.BarClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount + 1),\n          y: this.scale.endPoint,\n          width: this.scale.calculateBarWidth(this.datasets.length),\n          base: this.scale.endPoint,\n          strokeColor: this.datasets[datasetIndex].strokeColor,\n          fillColor: this.datasets[datasetIndex].fillColor\n        }));\n      }, this);\n      this.scale.addXLabel(label);\n      //Then re-render the chart.\n      this.update();\n    },\n    removeData: function () {\n      this.scale.removeXLabel();\n      //Then re-render the chart.\n      helpers.each(this.datasets, function (dataset) {\n        dataset.bars.shift();\n      }, this);\n      this.update();\n    },\n    reflow: function () {\n      helpers.extend(this.BarClass.prototype, {\n        y: this.scale.endPoint,\n        base: this.scale.endPoint\n      });\n      var newScaleProps = helpers.extend({\n        height: this.chart.height,\n        width: this.chart.width\n      });\n      this.scale.update(newScaleProps);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1;\n      this.clear();\n      var ctx = this.chart.ctx;\n      this.scale.draw(easingDecimal);\n\n      //Draw all the bars for each dataset\n      helpers.each(this.datasets, function (dataset, datasetIndex) {\n        helpers.each(dataset.bars, function (bar, index) {\n          if (bar.hasValue()) {\n            bar.base = this.scale.endPoint;\n            //Transition then draw\n            bar.transition({\n              x: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n              y: this.scale.calculateY(bar.value),\n              width: this.scale.calculateBarWidth(this.datasets.length)\n            }, easingDecimal).draw();\n          }\n        }, this);\n      }, this);\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n    Chart = root.Chart,\n    //Cache a local reference to Chart.helpers\n    helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //The percentage of the chart that we cut out of the middle.\n    percentageInnerCutout: 50,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    //Passing in a name registers this chart in the Chart namespace\n    name: \"Doughnut\",\n    //Providing a defaults will also register the defaults in the chart namespace\n    defaults: defaultConfig,\n    //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n    //Config is automatically merged by the core of Chart.js, and is available at this.options\n    initialize: function (data) {\n      //Declare segments as a static property to prevent inheriting across the Chart type prototype\n      this.segments = [];\n      this.outerRadius = (helpers.min([this.chart.width, this.chart.height]) - this.options.segmentStrokeWidth / 2) / 2;\n      this.SegmentArc = Chart.Arc.extend({\n        ctx: this.chart.ctx,\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n\n      //Set up tooltip events on the chart\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeSegments = evt.type !== 'mouseout' ? this.getSegmentsAtEvent(evt) : [];\n          helpers.each(this.segments, function (segment) {\n            segment.restore([\"fillColor\"]);\n          });\n          helpers.each(activeSegments, function (activeSegment) {\n            activeSegment.fillColor = activeSegment.highlightColor;\n          });\n          this.showTooltip(activeSegments);\n        });\n      }\n      this.calculateTotal(data);\n      helpers.each(data, function (datapoint, index) {\n        if (!datapoint.color) {\n          datapoint.color = 'hsl(' + 360 * index / data.length + ', 100%, 50%)';\n        }\n        this.addData(datapoint, index, true);\n      }, this);\n      this.render();\n    },\n    getSegmentsAtEvent: function (e) {\n      var segmentsArray = [];\n      var location = helpers.getRelativePosition(e);\n      helpers.each(this.segments, function (segment) {\n        if (segment.inRange(location.x, location.y)) segmentsArray.push(segment);\n      }, this);\n      return segmentsArray;\n    },\n    addData: function (segment, atIndex, silent) {\n      var index = atIndex !== undefined ? atIndex : this.segments.length;\n      if (typeof segment.color === \"undefined\") {\n        segment.color = Chart.defaults.global.segmentColorDefault[index % Chart.defaults.global.segmentColorDefault.length];\n        segment.highlight = Chart.defaults.global.segmentHighlightColorDefaults[index % Chart.defaults.global.segmentHighlightColorDefaults.length];\n      }\n      this.segments.splice(index, 0, new this.SegmentArc({\n        value: segment.value,\n        outerRadius: this.options.animateScale ? 0 : this.outerRadius,\n        innerRadius: this.options.animateScale ? 0 : this.outerRadius / 100 * this.options.percentageInnerCutout,\n        fillColor: segment.color,\n        highlightColor: segment.highlight || segment.color,\n        showStroke: this.options.segmentShowStroke,\n        strokeWidth: this.options.segmentStrokeWidth,\n        strokeColor: this.options.segmentStrokeColor,\n        startAngle: Math.PI * 1.5,\n        circumference: this.options.animateRotate ? 0 : this.calculateCircumference(segment.value),\n        label: segment.label\n      }));\n      if (!silent) {\n        this.reflow();\n        this.update();\n      }\n    },\n    calculateCircumference: function (value) {\n      if (this.total > 0) {\n        return Math.PI * 2 * (value / this.total);\n      } else {\n        return 0;\n      }\n    },\n    calculateTotal: function (data) {\n      this.total = 0;\n      helpers.each(data, function (segment) {\n        this.total += Math.abs(segment.value);\n      }, this);\n    },\n    update: function () {\n      this.calculateTotal(this.segments);\n\n      // Reset any highlight colours before updating.\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor']);\n      });\n      helpers.each(this.segments, function (segment) {\n        segment.save();\n      });\n      this.render();\n    },\n    removeData: function (atIndex) {\n      var indexToDelete = helpers.isNumber(atIndex) ? atIndex : this.segments.length - 1;\n      this.segments.splice(indexToDelete, 1);\n      this.reflow();\n      this.update();\n    },\n    reflow: function () {\n      helpers.extend(this.SegmentArc.prototype, {\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.outerRadius = (helpers.min([this.chart.width, this.chart.height]) - this.options.segmentStrokeWidth / 2) / 2;\n      helpers.each(this.segments, function (segment) {\n        segment.update({\n          outerRadius: this.outerRadius,\n          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout\n        });\n      }, this);\n    },\n    draw: function (easeDecimal) {\n      var animDecimal = easeDecimal ? easeDecimal : 1;\n      this.clear();\n      helpers.each(this.segments, function (segment, index) {\n        segment.transition({\n          circumference: this.calculateCircumference(segment.value),\n          outerRadius: this.outerRadius,\n          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout\n        }, animDecimal);\n        segment.endAngle = segment.startAngle + segment.circumference;\n        segment.draw();\n        if (index === 0) {\n          segment.startAngle = Math.PI * 1.5;\n        }\n        //Check to see if it's the last segment, if not get the next and update the start angle\n        if (index < this.segments.length - 1) {\n          this.segments[index + 1].startAngle = segment.endAngle;\n        }\n      }, this);\n    }\n  });\n  Chart.types.Doughnut.extend({\n    name: \"Pie\",\n    defaults: helpers.merge(defaultConfig, {\n      percentageInnerCutout: 0\n    })\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n    Chart = root.Chart,\n    helpers = Chart.helpers;\n  var defaultConfig = {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\",\n    //Boolean - Whether to horizontally center the label and point dot inside the grid\n    offsetGridLines: false\n  };\n  Chart.Type.extend({\n    name: \"Line\",\n    defaults: defaultConfig,\n    initialize: function (data) {\n      //Declare the extension of the default point, to cater for the options passed in to the constructor\n      this.PointClass = Chart.Point.extend({\n        offsetGridLines: this.options.offsetGridLines,\n        strokeWidth: this.options.pointDotStrokeWidth,\n        radius: this.options.pointDotRadius,\n        display: this.options.pointDot,\n        hitDetectionRadius: this.options.pointHitDetectionRadius,\n        ctx: this.chart.ctx,\n        inRange: function (mouseX) {\n          return Math.pow(mouseX - this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius, 2);\n        }\n      });\n      this.datasets = [];\n\n      //Set up tooltip events on the chart\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activePoints = evt.type !== 'mouseout' ? this.getPointsAtEvent(evt) : [];\n          this.eachPoints(function (point) {\n            point.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activePoints, function (activePoint) {\n            activePoint.fillColor = activePoint.highlightFill;\n            activePoint.strokeColor = activePoint.highlightStroke;\n          });\n          this.showTooltip(activePoints);\n        });\n      }\n\n      //Iterate through each of the datasets, and build this into a property of the chart\n      helpers.each(data.datasets, function (dataset) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          pointColor: dataset.pointColor,\n          pointStrokeColor: dataset.pointStrokeColor,\n          points: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          datasetObject.points.push(new this.PointClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            strokeColor: dataset.pointStrokeColor,\n            fillColor: dataset.pointColor,\n            highlightFill: dataset.pointHighlightFill || dataset.pointColor,\n            highlightStroke: dataset.pointHighlightStroke || dataset.pointStrokeColor\n          }));\n        }, this);\n        this.buildScale(data.labels);\n        this.eachPoints(function (point, index) {\n          helpers.extend(point, {\n            x: this.scale.calculateX(index),\n            y: this.scale.endPoint\n          });\n          point.save();\n        }, this);\n      }, this);\n      this.render();\n    },\n    update: function () {\n      this.scale.update();\n      // Reset any highlight colours before updating.\n      helpers.each(this.activeElements, function (activeElement) {\n        activeElement.restore(['fillColor', 'strokeColor']);\n      });\n      this.eachPoints(function (point) {\n        point.save();\n      });\n      this.render();\n    },\n    eachPoints: function (callback) {\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, callback, this);\n      }, this);\n    },\n    getPointsAtEvent: function (e) {\n      var pointsArray = [],\n        eventPosition = helpers.getRelativePosition(e);\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, function (point) {\n          if (point.inRange(eventPosition.x, eventPosition.y)) pointsArray.push(point);\n        });\n      }, this);\n      return pointsArray;\n    },\n    buildScale: function (labels) {\n      var self = this;\n      var dataTotal = function () {\n        var values = [];\n        self.eachPoints(function (point) {\n          values.push(point.value);\n        });\n        return values;\n      };\n      var scaleOptions = {\n        templateString: this.options.scaleLabel,\n        height: this.chart.height,\n        width: this.chart.width,\n        ctx: this.chart.ctx,\n        textColor: this.options.scaleFontColor,\n        offsetGridLines: this.options.offsetGridLines,\n        fontSize: this.options.scaleFontSize,\n        fontStyle: this.options.scaleFontStyle,\n        fontFamily: this.options.scaleFontFamily,\n        valuesCount: labels.length,\n        beginAtZero: this.options.scaleBeginAtZero,\n        integersOnly: this.options.scaleIntegersOnly,\n        calculateYRange: function (currentHeight) {\n          var updatedRanges = helpers.calculateScaleRange(dataTotal(), currentHeight, this.fontSize, this.beginAtZero, this.integersOnly);\n          helpers.extend(this, updatedRanges);\n        },\n        xLabels: labels,\n        font: helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n        lineWidth: this.options.scaleLineWidth,\n        lineColor: this.options.scaleLineColor,\n        showHorizontalLines: this.options.scaleShowHorizontalLines,\n        showVerticalLines: this.options.scaleShowVerticalLines,\n        gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,\n        gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n        padding: this.options.showScale ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n        showLabels: this.options.scaleShowLabels,\n        display: this.options.showScale\n      };\n      if (this.options.scaleOverride) {\n        helpers.extend(scaleOptions, {\n          calculateYRange: helpers.noop,\n          steps: this.options.scaleSteps,\n          stepValue: this.options.scaleStepWidth,\n          min: this.options.scaleStartValue,\n          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n        });\n      }\n      this.scale = new Chart.Scale(scaleOptions);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        //Add a new point for each piece of data, passing any required data to draw.\n        this.datasets[datasetIndex].points.push(new this.PointClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: this.scale.calculateX(this.scale.valuesCount + 1),\n          y: this.scale.endPoint,\n          strokeColor: this.datasets[datasetIndex].pointStrokeColor,\n          fillColor: this.datasets[datasetIndex].pointColor\n        }));\n      }, this);\n      this.scale.addXLabel(label);\n      //Then re-render the chart.\n      this.update();\n    },\n    removeData: function () {\n      this.scale.removeXLabel();\n      //Then re-render the chart.\n      helpers.each(this.datasets, function (dataset) {\n        dataset.points.shift();\n      }, this);\n      this.update();\n    },\n    reflow: function () {\n      var newScaleProps = helpers.extend({\n        height: this.chart.height,\n        width: this.chart.width\n      });\n      this.scale.update(newScaleProps);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1;\n      this.clear();\n      var ctx = this.chart.ctx;\n\n      // Some helper methods for getting the next/prev points\n      var hasValue = function (item) {\n          return item.value !== null;\n        },\n        nextPoint = function (point, collection, index) {\n          return helpers.findNextWhere(collection, hasValue, index) || point;\n        },\n        previousPoint = function (point, collection, index) {\n          return helpers.findPreviousWhere(collection, hasValue, index) || point;\n        };\n      if (!this.scale) return;\n      this.scale.draw(easingDecimal);\n      helpers.each(this.datasets, function (dataset) {\n        var pointsWithValues = helpers.where(dataset.points, hasValue);\n\n        //Transition each point first so that the line and point drawing isn't out of sync\n        //We can use this extra loop to calculate the control points of this dataset also in this loop\n\n        helpers.each(dataset.points, function (point, index) {\n          if (point.hasValue()) {\n            point.transition({\n              y: this.scale.calculateY(point.value),\n              x: this.scale.calculateX(index)\n            }, easingDecimal);\n          }\n        }, this);\n\n        // Control points need to be calculated in a separate loop, because we need to know the current x/y of the point\n        // This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n        if (this.options.bezierCurve) {\n          helpers.each(pointsWithValues, function (point, index) {\n            var tension = index > 0 && index < pointsWithValues.length - 1 ? this.options.bezierCurveTension : 0;\n            point.controlPoints = helpers.splineCurve(previousPoint(point, pointsWithValues, index), point, nextPoint(point, pointsWithValues, index), tension);\n\n            // Prevent the bezier going outside of the bounds of the graph\n\n            // Cap puter bezier handles to the upper/lower scale bounds\n            if (point.controlPoints.outer.y > this.scale.endPoint) {\n              point.controlPoints.outer.y = this.scale.endPoint;\n            } else if (point.controlPoints.outer.y < this.scale.startPoint) {\n              point.controlPoints.outer.y = this.scale.startPoint;\n            }\n\n            // Cap inner bezier handles to the upper/lower scale bounds\n            if (point.controlPoints.inner.y > this.scale.endPoint) {\n              point.controlPoints.inner.y = this.scale.endPoint;\n            } else if (point.controlPoints.inner.y < this.scale.startPoint) {\n              point.controlPoints.inner.y = this.scale.startPoint;\n            }\n          }, this);\n        }\n\n        //Draw the line between all the points\n        ctx.lineWidth = this.options.datasetStrokeWidth;\n        ctx.strokeStyle = dataset.strokeColor;\n        ctx.beginPath();\n        helpers.each(pointsWithValues, function (point, index) {\n          if (index === 0) {\n            ctx.moveTo(point.x, point.y);\n          } else {\n            if (this.options.bezierCurve) {\n              var previous = previousPoint(point, pointsWithValues, index);\n              ctx.bezierCurveTo(previous.controlPoints.outer.x, previous.controlPoints.outer.y, point.controlPoints.inner.x, point.controlPoints.inner.y, point.x, point.y);\n            } else {\n              ctx.lineTo(point.x, point.y);\n            }\n          }\n        }, this);\n        if (this.options.datasetStroke) {\n          ctx.stroke();\n        }\n        if (this.options.datasetFill && pointsWithValues.length > 0) {\n          //Round off the line by going to the base of the chart, back to the start, then fill.\n          ctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n          ctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n          ctx.fillStyle = dataset.fillColor;\n          ctx.closePath();\n          ctx.fill();\n        }\n\n        //Now draw the points over the line\n        //A little inefficient double looping, but better than the line\n        //lagging behind the point positions\n        helpers.each(pointsWithValues, function (point) {\n          point.draw();\n        });\n      }, this);\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n    Chart = root.Chart,\n    //Cache a local reference to Chart.helpers\n    helpers = Chart.helpers;\n  var defaultConfig = {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop: true,\n    //String - The colour of the label backdrop\n    scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //Number - The backdrop padding above & below the label in pixels\n    scaleBackdropPaddingY: 2,\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX: 2,\n    //Boolean - Show line for each value in the scale\n    scaleShowLine: true,\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke: true,\n    //String - The colour of the stroke on each segment.\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect.\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate: true,\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale: false,\n    //String - A legend template\n    legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n  };\n  Chart.Type.extend({\n    //Passing in a name registers this chart in the Chart namespace\n    name: \"PolarArea\",\n    //Providing a defaults will also register the defaults in the chart namespace\n    defaults: defaultConfig,\n    //Initialize is fired when the chart is initialized - Data is passed in as a parameter\n    //Config is automatically merged by the core of Chart.js, and is available at this.options\n    initialize: function (data) {\n      this.segments = [];\n      //Declare segment class as a chart instance specific class, so it can share props for this instance\n      this.SegmentArc = Chart.Arc.extend({\n        showStroke: this.options.segmentShowStroke,\n        strokeWidth: this.options.segmentStrokeWidth,\n        strokeColor: this.options.segmentStrokeColor,\n        ctx: this.chart.ctx,\n        innerRadius: 0,\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.scale = new Chart.RadialScale({\n        display: this.options.showScale,\n        fontStyle: this.options.scaleFontStyle,\n        fontSize: this.options.scaleFontSize,\n        fontFamily: this.options.scaleFontFamily,\n        fontColor: this.options.scaleFontColor,\n        showLabels: this.options.scaleShowLabels,\n        showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n        backdropColor: this.options.scaleBackdropColor,\n        backdropPaddingY: this.options.scaleBackdropPaddingY,\n        backdropPaddingX: this.options.scaleBackdropPaddingX,\n        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,\n        lineColor: this.options.scaleLineColor,\n        lineArc: true,\n        width: this.chart.width,\n        height: this.chart.height,\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2,\n        ctx: this.chart.ctx,\n        templateString: this.options.scaleLabel,\n        valuesCount: data.length\n      });\n      this.updateScaleRange(data);\n      this.scale.update();\n      helpers.each(data, function (segment, index) {\n        this.addData(segment, index, true);\n      }, this);\n\n      //Set up tooltip events on the chart\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activeSegments = evt.type !== 'mouseout' ? this.getSegmentsAtEvent(evt) : [];\n          helpers.each(this.segments, function (segment) {\n            segment.restore([\"fillColor\"]);\n          });\n          helpers.each(activeSegments, function (activeSegment) {\n            activeSegment.fillColor = activeSegment.highlightColor;\n          });\n          this.showTooltip(activeSegments);\n        });\n      }\n      this.render();\n    },\n    getSegmentsAtEvent: function (e) {\n      var segmentsArray = [];\n      var location = helpers.getRelativePosition(e);\n      helpers.each(this.segments, function (segment) {\n        if (segment.inRange(location.x, location.y)) segmentsArray.push(segment);\n      }, this);\n      return segmentsArray;\n    },\n    addData: function (segment, atIndex, silent) {\n      var index = atIndex || this.segments.length;\n      this.segments.splice(index, 0, new this.SegmentArc({\n        fillColor: segment.color,\n        highlightColor: segment.highlight || segment.color,\n        label: segment.label,\n        value: segment.value,\n        outerRadius: this.options.animateScale ? 0 : this.scale.calculateCenterOffset(segment.value),\n        circumference: this.options.animateRotate ? 0 : this.scale.getCircumference(),\n        startAngle: Math.PI * 1.5\n      }));\n      if (!silent) {\n        this.reflow();\n        this.update();\n      }\n    },\n    removeData: function (atIndex) {\n      var indexToDelete = helpers.isNumber(atIndex) ? atIndex : this.segments.length - 1;\n      this.segments.splice(indexToDelete, 1);\n      this.reflow();\n      this.update();\n    },\n    calculateTotal: function (data) {\n      this.total = 0;\n      helpers.each(data, function (segment) {\n        this.total += segment.value;\n      }, this);\n      this.scale.valuesCount = this.segments.length;\n    },\n    updateScaleRange: function (datapoints) {\n      var valuesArray = [];\n      helpers.each(datapoints, function (segment) {\n        valuesArray.push(segment.value);\n      });\n      var scaleSizes = this.options.scaleOverride ? {\n        steps: this.options.scaleSteps,\n        stepValue: this.options.scaleStepWidth,\n        min: this.options.scaleStartValue,\n        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n      } : helpers.calculateScaleRange(valuesArray, helpers.min([this.chart.width, this.chart.height]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);\n      helpers.extend(this.scale, scaleSizes, {\n        size: helpers.min([this.chart.width, this.chart.height]),\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n    },\n    update: function () {\n      this.calculateTotal(this.segments);\n      helpers.each(this.segments, function (segment) {\n        segment.save();\n      });\n      this.reflow();\n      this.render();\n    },\n    reflow: function () {\n      helpers.extend(this.SegmentArc.prototype, {\n        x: this.chart.width / 2,\n        y: this.chart.height / 2\n      });\n      this.updateScaleRange(this.segments);\n      this.scale.update();\n      helpers.extend(this.scale, {\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n      helpers.each(this.segments, function (segment) {\n        segment.update({\n          outerRadius: this.scale.calculateCenterOffset(segment.value)\n        });\n      }, this);\n    },\n    draw: function (ease) {\n      var easingDecimal = ease || 1;\n      //Clear & draw the canvas\n      this.clear();\n      helpers.each(this.segments, function (segment, index) {\n        segment.transition({\n          circumference: this.scale.getCircumference(),\n          outerRadius: this.scale.calculateCenterOffset(segment.value)\n        }, easingDecimal);\n        segment.endAngle = segment.startAngle + segment.circumference;\n\n        // If we've removed the first segment we need to set the first one to\n        // start at the top.\n        if (index === 0) {\n          segment.startAngle = Math.PI * 1.5;\n        }\n\n        //Check to see if it's the last segment, if not get the next and update the start angle\n        if (index < this.segments.length - 1) {\n          this.segments[index + 1].startAngle = segment.endAngle;\n        }\n        segment.draw();\n      }, this);\n      this.scale.draw();\n    }\n  });\n}).call(this);\n(function () {\n  \"use strict\";\n\n  var root = this,\n    Chart = root.Chart,\n    helpers = Chart.helpers;\n  Chart.Type.extend({\n    name: \"Radar\",\n    defaults: {\n      //Boolean - Whether to show lines for each scale point\n      scaleShowLine: true,\n      //Boolean - Whether we show the angle lines out of the radar\n      angleShowLineOut: true,\n      //Boolean - Whether to show labels on the scale\n      scaleShowLabels: false,\n      // Boolean - Whether the scale should begin at zero\n      scaleBeginAtZero: true,\n      //String - Colour of the angle line\n      angleLineColor: \"rgba(0,0,0,.1)\",\n      //Number - Pixel width of the angle line\n      angleLineWidth: 1,\n      //Number - Interval at which to draw angle lines (\"every Nth point\")\n      angleLineInterval: 1,\n      //String - Point label font declaration\n      pointLabelFontFamily: \"'Arial'\",\n      //String - Point label font weight\n      pointLabelFontStyle: \"normal\",\n      //Number - Point label font size in pixels\n      pointLabelFontSize: 10,\n      //String - Point label font colour\n      pointLabelFontColor: \"#666\",\n      //Boolean - Whether to show a dot for each point\n      pointDot: true,\n      //Number - Radius of each point dot in pixels\n      pointDotRadius: 3,\n      //Number - Pixel width of point dot stroke\n      pointDotStrokeWidth: 1,\n      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n      pointHitDetectionRadius: 20,\n      //Boolean - Whether to show a stroke for datasets\n      datasetStroke: true,\n      //Number - Pixel width of dataset stroke\n      datasetStrokeWidth: 2,\n      //Boolean - Whether to fill the dataset with a colour\n      datasetFill: true,\n      //String - A legend template\n      legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n    },\n    initialize: function (data) {\n      this.PointClass = Chart.Point.extend({\n        strokeWidth: this.options.pointDotStrokeWidth,\n        radius: this.options.pointDotRadius,\n        display: this.options.pointDot,\n        hitDetectionRadius: this.options.pointHitDetectionRadius,\n        ctx: this.chart.ctx\n      });\n      this.datasets = [];\n      this.buildScale(data);\n\n      //Set up tooltip events on the chart\n      if (this.options.showTooltips) {\n        helpers.bindEvents(this, this.options.tooltipEvents, function (evt) {\n          var activePointsCollection = evt.type !== 'mouseout' ? this.getPointsAtEvent(evt) : [];\n          this.eachPoints(function (point) {\n            point.restore(['fillColor', 'strokeColor']);\n          });\n          helpers.each(activePointsCollection, function (activePoint) {\n            activePoint.fillColor = activePoint.highlightFill;\n            activePoint.strokeColor = activePoint.highlightStroke;\n          });\n          this.showTooltip(activePointsCollection);\n        });\n      }\n\n      //Iterate through each of the datasets, and build this into a property of the chart\n      helpers.each(data.datasets, function (dataset) {\n        var datasetObject = {\n          label: dataset.label || null,\n          fillColor: dataset.fillColor,\n          strokeColor: dataset.strokeColor,\n          pointColor: dataset.pointColor,\n          pointStrokeColor: dataset.pointStrokeColor,\n          points: []\n        };\n        this.datasets.push(datasetObject);\n        helpers.each(dataset.data, function (dataPoint, index) {\n          //Add a new point for each piece of data, passing any required data to draw.\n          var pointPosition;\n          if (!this.scale.animation) {\n            pointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n          }\n          datasetObject.points.push(new this.PointClass({\n            value: dataPoint,\n            label: data.labels[index],\n            datasetLabel: dataset.label,\n            x: this.options.animation ? this.scale.xCenter : pointPosition.x,\n            y: this.options.animation ? this.scale.yCenter : pointPosition.y,\n            strokeColor: dataset.pointStrokeColor,\n            fillColor: dataset.pointColor,\n            highlightFill: dataset.pointHighlightFill || dataset.pointColor,\n            highlightStroke: dataset.pointHighlightStroke || dataset.pointStrokeColor\n          }));\n        }, this);\n      }, this);\n      this.render();\n    },\n    eachPoints: function (callback) {\n      helpers.each(this.datasets, function (dataset) {\n        helpers.each(dataset.points, callback, this);\n      }, this);\n    },\n    getPointsAtEvent: function (evt) {\n      var mousePosition = helpers.getRelativePosition(evt),\n        fromCenter = helpers.getAngleFromPoint({\n          x: this.scale.xCenter,\n          y: this.scale.yCenter\n        }, mousePosition);\n      var anglePerIndex = Math.PI * 2 / this.scale.valuesCount,\n        pointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n        activePointsCollection = [];\n\n      // If we're at the top, make the pointIndex 0 to get the first of the array.\n      if (pointIndex >= this.scale.valuesCount || pointIndex < 0) {\n        pointIndex = 0;\n      }\n      if (fromCenter.distance <= this.scale.drawingArea) {\n        helpers.each(this.datasets, function (dataset) {\n          activePointsCollection.push(dataset.points[pointIndex]);\n        });\n      }\n      return activePointsCollection;\n    },\n    buildScale: function (data) {\n      this.scale = new Chart.RadialScale({\n        display: this.options.showScale,\n        fontStyle: this.options.scaleFontStyle,\n        fontSize: this.options.scaleFontSize,\n        fontFamily: this.options.scaleFontFamily,\n        fontColor: this.options.scaleFontColor,\n        showLabels: this.options.scaleShowLabels,\n        showLabelBackdrop: this.options.scaleShowLabelBackdrop,\n        backdropColor: this.options.scaleBackdropColor,\n        backgroundColors: this.options.scaleBackgroundColors,\n        backdropPaddingY: this.options.scaleBackdropPaddingY,\n        backdropPaddingX: this.options.scaleBackdropPaddingX,\n        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,\n        lineColor: this.options.scaleLineColor,\n        angleLineColor: this.options.angleLineColor,\n        angleLineWidth: this.options.angleShowLineOut ? this.options.angleLineWidth : 0,\n        angleLineInterval: this.options.angleLineInterval ? this.options.angleLineInterval : 1,\n        // Point labels at the edge of each line\n        pointLabelFontColor: this.options.pointLabelFontColor,\n        pointLabelFontSize: this.options.pointLabelFontSize,\n        pointLabelFontFamily: this.options.pointLabelFontFamily,\n        pointLabelFontStyle: this.options.pointLabelFontStyle,\n        height: this.chart.height,\n        width: this.chart.width,\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2,\n        ctx: this.chart.ctx,\n        templateString: this.options.scaleLabel,\n        labels: data.labels,\n        valuesCount: data.datasets[0].data.length\n      });\n      this.scale.setScaleSize();\n      this.updateScaleRange(data.datasets);\n      this.scale.buildYLabels();\n    },\n    updateScaleRange: function (datasets) {\n      var valuesArray = function () {\n        var totalDataArray = [];\n        helpers.each(datasets, function (dataset) {\n          if (dataset.data) {\n            totalDataArray = totalDataArray.concat(dataset.data);\n          } else {\n            helpers.each(dataset.points, function (point) {\n              totalDataArray.push(point.value);\n            });\n          }\n        });\n        return totalDataArray;\n      }();\n      var scaleSizes = this.options.scaleOverride ? {\n        steps: this.options.scaleSteps,\n        stepValue: this.options.scaleStepWidth,\n        min: this.options.scaleStartValue,\n        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth\n      } : helpers.calculateScaleRange(valuesArray, helpers.min([this.chart.width, this.chart.height]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);\n      helpers.extend(this.scale, scaleSizes);\n    },\n    addData: function (valuesArray, label) {\n      //Map the values array for each of the datasets\n      this.scale.valuesCount++;\n      helpers.each(valuesArray, function (value, datasetIndex) {\n        var pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n        this.datasets[datasetIndex].points.push(new this.PointClass({\n          value: value,\n          label: label,\n          datasetLabel: this.datasets[datasetIndex].label,\n          x: pointPosition.x,\n          y: pointPosition.y,\n          strokeColor: this.datasets[datasetIndex].pointStrokeColor,\n          fillColor: this.datasets[datasetIndex].pointColor\n        }));\n      }, this);\n      this.scale.labels.push(label);\n      this.reflow();\n      this.update();\n    },\n    removeData: function () {\n      this.scale.valuesCount--;\n      this.scale.labels.shift();\n      helpers.each(this.datasets, function (dataset) {\n        dataset.points.shift();\n      }, this);\n      this.reflow();\n      this.update();\n    },\n    update: function () {\n      this.eachPoints(function (point) {\n        point.save();\n      });\n      this.reflow();\n      this.render();\n    },\n    reflow: function () {\n      helpers.extend(this.scale, {\n        width: this.chart.width,\n        height: this.chart.height,\n        size: helpers.min([this.chart.width, this.chart.height]),\n        xCenter: this.chart.width / 2,\n        yCenter: this.chart.height / 2\n      });\n      this.updateScaleRange(this.datasets);\n      this.scale.setScaleSize();\n      this.scale.buildYLabels();\n    },\n    draw: function (ease) {\n      var easeDecimal = ease || 1,\n        ctx = this.chart.ctx;\n      this.clear();\n      this.scale.draw();\n      helpers.each(this.datasets, function (dataset) {\n        //Transition each point first so that the line and point drawing isn't out of sync\n        helpers.each(dataset.points, function (point, index) {\n          if (point.hasValue()) {\n            point.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n          }\n        }, this);\n\n        //Draw the line between all the points\n        ctx.lineWidth = this.options.datasetStrokeWidth;\n        ctx.strokeStyle = dataset.strokeColor;\n        ctx.beginPath();\n        helpers.each(dataset.points, function (point, index) {\n          if (index === 0) {\n            ctx.moveTo(point.x, point.y);\n          } else {\n            ctx.lineTo(point.x, point.y);\n          }\n        }, this);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fillStyle = dataset.fillColor;\n        if (this.options.datasetFill) {\n          ctx.fill();\n        }\n        //Now draw the points over the line\n        //A little inefficient double looping, but better than the line\n        //lagging behind the point positions\n        helpers.each(dataset.points, function (point) {\n          if (point.hasValue()) {\n            point.draw();\n          }\n        });\n      }, this);\n    }\n  });\n}).call(this);","map":{"version":3,"names":["root","previous","Chart","context","chart","canvas","ctx","computeDimension","element","dimension","document","defaultView","getComputedStyle","getPropertyValue","width","height","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipTitleTemplate","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","segmentColorDefault","segmentHighlightColorDefaults","onAnimationProgress","onAnimationComplete","types","each","loopable","callback","self","additionalArgs","Array","prototype","slice","call","arguments","length","i","apply","concat","item","clone","obj","objClone","value","key","hasOwnProperty","extend","base","extensionObject","merge","master","args","unshift","indexOf","arrayToSearch","where","collection","filterCallback","filtered","push","findNextWhere","startIndex","currentItem","findPreviousWhere","inherits","extensions","parent","ChartElement","constructor","Surrogate","__super__","noop","uid","id","warn","str","window","console","amd","define","isNumber","n","isNaN","parseFloat","isFinite","max","array","Math","min","cap","valueToCap","maxValue","minValue","getDecimalPlaces","num","s","toString","split","parseInt","parts","toRadians","radians","degrees","PI","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","x","distanceFromYCenter","y","radialDistanceFromCenter","sqrt","angle","atan2","distance","aliasPixel","pixelWidth","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","calculateOrderOfMagnitude","val","floor","log","LN10","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","minSteps","maxSteps","skipFitting","values","v","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","template","templateString","valuesObject","Function","cache","tmpl","data","fn","test","replace","join","generateLabels","labelsArray","index","easingEffects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","left","clientY","top","addEvent","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","bindEvents","arrayOfEvents","events","eventName","unbindEvents","getMaximumWidth","domNode","container","parentNode","padding","getStyle","clientWidth","getMaximumHeight","clientHeight","el","property","currentStyle","getMaximumSize","devicePixelRatio","style","scale","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","animationService","cancelAnimation","newWidth","newHeight","reflow","render","Animation","numSteps","easing","animationObject","draw","addAnimation","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","isChanged","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xPositions","yPositions","xMax","yMax","xMin","yMin","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","custom","Element","tooltipPosition","Tooltip","caretHeight","text","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","pointRelativeAngle","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","easingDecimal","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleHeight","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","label","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","cachedEndPoint","cachedHeight","cachedYLabelWidth","calculateYRange","calculateXLabelRotation","firstWidth","lastWidth","firstRotated","lastRotated","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","originalLabelWidth","cosRotation","firstRotatedWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","isRotated","innerWidth","valueWidth","offsetGridLines","valueOffset","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","largestPossibleRadius","pointLabelFontSize","pointPosition","halfTextWidth","furthestRight","furthestRightIndex","furthestRightAngle","furthestLeft","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","maxWidthRadius","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","angleMultiplier","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","centerOffset","outerPosition","angleLineInterval","backgroundColors","previousOuterPosition","nextOuterPosition","previousOuterHalfway","nextOuterHalfway","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","frameDuration","animations","dropFrames","digestWrapper","animationWrapper","splice","startDigest","startTime","Date","now","framesToDrop","endTime","delay","frameDelay","timeout","instance","module","exports","noConflict","defaultConfig","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","baseWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","dataTotal","scaleOptions","beginAtZero","currentHeight","updatedRanges","addData","removeData","newScaleProps","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","color","segmentsArray","location","atIndex","silent","undefined","highlight","circumference","calculateCircumference","total","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","nextPoint","previousPoint","pointsWithValues","tension","controlPoints","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","scaleBackgroundColors","totalDataArray"],"sources":["C:/Users/AAA Rental LLP/Desktop/NewDashboard/my-dash/node_modules/chart.js/Chart.js"],"sourcesContent":["/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.1.1\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t};\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width') || context.canvas.width;\n\t\tvar height = this.height = computeDimension(context.canvas,'Height') || context.canvas.height;\n\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title template\n\t\t\ttooltipTitleTemplate: \"<%= label%>\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Array - A list of colors to use as the defaults\n\t\t\tsegmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\" ],\n\n\t\t\t// Array - A list of highlight colors to use as the defaults\n\t\t\tsegmentHighlightColorDefaults: [ \"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\" ],\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)){\n\t\t\t\t\tobjClone[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)){\n\t\t\t\t\t\tbase[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn === \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define === 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\tvar s = num.toString();\n\t\t\t\tif(s.indexOf(\"e-\") < 0){\n\t\t\t\t\t// no exponent, e.g. 0.01\n\t\t\t\t\treturn s.split(\".\")[1].length;\n\t\t\t\t}\n\t\t\t\telse if(s.indexOf(\".\") < 0) {\n\t\t\t\t\t// no decimal point, e.g. 1e-9\n\t\t\t\t\treturn parseInt(s.split(\"e-\")[1]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// exponent and decimal point, e.g. 1.23e-9\n\t\t\t\t\tvar parts = s.split(\".\")[1].split(\"e-\");\n\t\t\t\t\treturn parts[0].length + parseInt(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\t// Filter out null values since these would min() to zero\n\t\t\tvar values = [];\n\t\t\teach(valuesArray, function( v ){\n\t\t\t\tv == null || values.push( v );\n\t\t\t});\n\t\t\tvar minValue = min(values),\n\t\t\t    maxValue = max(values);\n\n\t\t\t// We need some degree of separation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (templateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (t === 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) == 2){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1){\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));}\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2){\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\t}\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientWidth - padding : 0;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientHeight - padding : 0;\n\t\t},\n\t\tgetStyle = helpers.getStyle = function (el, property) {\n\t\t\treturn el.currentStyle ?\n\t\t\t\tel.currentStyle[property] :\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = this.options.animationSteps;\n\t\t\t\tanimation.easing = this.options.animationEasing;\n\t\t\t\t\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\t\t\t\t\t\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = this.options.onAnimationProgress;\n\t\t\t\tanimation.onAnimationComplete = this.options.onAnimationComplete;\n\t\t\t\t\n\t\t\t\tChart.animationService.addAnimation(this, animation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn helpers.template(this.options.legendTemplate, this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.stop();\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: template(this.options.tooltipTitleTemplate,ChartElements[0]),\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t// Normalize all angles to 0 - 2*PI (0 - 360°)\n\t\t\tvar pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n\t\t\t    startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n\t\t\t    endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360;\n\n\t\t\t// Calculate wether the pointRelativeAngle is between the start and the end angle\n\t\t\tvar betweenAngles = (endAngle < startAngle) ?\n\t\t\t\tpointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle:\n\t\t\t\tpointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle;\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n\n            ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: \"\", // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\t\t\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation \n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\t\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleHeight;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleHeight / 3;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize * 1.5 * afterTitleIndex) + this.fontSize / 2) + this.titleHeight;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) + 10 : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting endpoint, excluding the space for x labels\n\t\t\tvar cachedEndPoint = this.endPoint;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.endPoint = cachedEndPoint;\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth) ? firstWidth/2 : this.yLabelWidth;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar centerOffset = null, outerPosition = null;\n\n\t\t\t\t\t\tif (this.angleLineWidth > 0 && (i % this.angleLineInterval === 0)){\n\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n\t\t\t\t\t\t\tif (centerOffset == null)\n\t\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\n\t\t\t\t\t\t\tif (outerPosition == null)\n\t\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n\t\t\t\t\t\t\tvar nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterHalfway = { x: (previousOuterPosition.x + outerPosition.x) / 2, y: (previousOuterPosition.y + outerPosition.y) / 2 };\n\t\t\t\t\t\t\tvar nextOuterHalfway = { x: (outerPosition.x + nextOuterPosition.x) / 2, y: (outerPosition.y + nextOuterPosition.y) / 2 };\n\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n\t\t\t\t\t\t\tctx.fillStyle = this.backgroundColors[i];\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\taddAnimation: function(chartInstance, animationObject) {\n\t\t\tfor (var index = 0; index < this.animations.length; ++ index){\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance){\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (this.animations.length == 1) {\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findNextWhere(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\t\t\t\n\t\t\tif (index)\n\t\t\t{\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\t// calls startDigest with the proper context\n\t\tdigestWrapper: function() {\n\t\t\tChart.animationService.startDigest.call(Chart.animationService);\n\t\t},\n\t\tstartDigest: function() {\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif(this.dropFrames > 1){\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\n\t\t\t\tthis.dropFrames -= framesToDrop;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.animations.length; i++) {\n\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\t\t\t\tif(this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\n\t\t\t\t\n\t\t\t\t// Check if executed the last frame.\n\t\t\t\tif (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps){\n\t\t\t\t\t// Call onAnimationComplete\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance);\n\t\t\t\t\t// Remove the animation.\n\t\t\t\t\tthis.animations.splice(i, 1);\n\t\t\t\t\t// Keep the index in place to offset the splice\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar delay = endTime - startTime - this.frameDuration;\n\t\t\tvar frameDelay = delay / this.frameDuration;\n\n\t\t\tif(frameDelay > 1){\n\t\t\t\tthis.dropFrames += frameDelay;\n\t\t\t}\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (this.animations.length > 0){\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t}\n\t};\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine('Chart', [], function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tif (activeBar) {\n\t\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : (dataset.highlightFill) ? (typeof dataset.highlightFill == 'object') ? dataset.highlightFill[index] : dataset.highlightFill : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : (dataset.highlightStroke) ? (typeof dataset.highlightStroke == 'object') ? dataset.highlightStroke[index] : dataset.highlightStroke : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tif (!datapoint.color) {\n\t\t\t\t\tdatapoint.color = 'hsl(' + (360 * index / data.length) + ', 100%, 50%)';\n\t\t\t\t}\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex !== undefined ? atIndex : this.segments.length;\n\t\t\tif ( typeof(segment.color) === \"undefined\" ) {\n\t\t\t\tsegment.color = Chart.defaults.global.segmentColorDefault[index % Chart.defaults.global.segmentColorDefault.length];\n\t\t\t\tsegment.highlight = Chart.defaults.global.segmentHighlightColorDefaults[index % Chart.defaults.global.segmentHighlightColorDefaults.length];\t\t\t\t\n\t\t\t}\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value) {\n\t\t\tif ( this.total > 0 ) {\n\t\t\t\treturn (Math.PI*2)*(value / this.total);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\",\n\n\t\t//Boolean - Whether to horizontally center the label and point dot inside the grid\n\t\toffsetGridLines : false\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tif (!this.scale) return;\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a separate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (this.options.datasetStroke) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segment.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//Number - Interval at which to draw angle lines (\"every Nth point\")\n\t\t\tangleLineInterval: 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackgroundColors: this.options.scaleBackgroundColors,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n        angleLineInterval: (this.options.angleLineInterval) ? this.options.angleLineInterval : 1,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tif(this.options.datasetFill){\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}